{"version":3,"sources":["webpack:///./src/components/ripple.ts","webpack:///./src/pages/pagePassword.ts","webpack:///./src/helpers/dom/clickEvent.ts","webpack:///./src/components/button.ts","webpack:///./src/components/misc.ts","webpack:///./src/helpers/dom/replaceContent.ts","webpack:///./src/components/inputField.ts","webpack:///./src/components/appNavigationController.ts","webpack:///./src/helpers/dom/dispatchEvent.ts","webpack:///./src/helpers/sequentialDom.ts","webpack:///./src/helpers/dom/toggleDisability.ts","webpack:///./src/lib/mtproto/serverTimeManager.ts","webpack:///./src/helpers/dom/getRichValue.ts","webpack:///./src/lib/mtproto/passwordManager.ts","webpack:///./src/helpers/dom/getRichElementValue.ts","webpack:///./src/helpers/dom/findUpAttribute.ts","webpack:///./src/helpers/dom/isInputEmpty.ts","webpack:///./src/helpers/formatPhoneNumber.ts","webpack:///./src/components/passwordInputField.ts","webpack:///./src/components/monkeys/password.ts","webpack:///./src/pages/loginPage.ts"],"names":["rippleClickId","ripple","elem","callback","Promise","resolve","onEnd","prepend","querySelector","classList","add","r","document","createElement","handler","contains","drawRipple","clientX","clientY","startTime","Date","now","clickId","duration","window","getComputedStyle","getPropertyValue","replace","elapsedTime","cb","mutate","remove","delay","Math","max","setTimeout","removeEventListener","touchStartFired","requestAnimationFrame","rect","getBoundingClientRect","clickX","left","clickY","top","size","sqrt","abs","height","width","x","y","style","append","isRippleUnneeded","e","target","includes","tagName","touchEnd","addEventListener","settings","animationsEnabled","touches","length","once","cancelBubble","stopPropagation","passive","button","dataset","passwordInput","page","className","withInputWrapper","titleLangKey","subtitleLangKey","btnNext","btnNextI18n","IntlElement","key","element","passwordInputField","label","name","getStateInterval","input","inputWrapper","container","state","getState","setInterval","then","_state","hint","wrapEmojiText","setLabel","onSubmit","value","toggle","update","preloader","check","response","_","clearInterval","m","default","mount","monkey","removeAttribute","catch","err","type","select","this","isMobile","imageDiv","all","load","focus","pushToState","CLICK_EVENT_NAME","attachClickEvent","options","listenerSetter","bind","touchMouseDown","detachClickEvent","simulateClickEvent","asDiv","icon","noRipple","rippleSquare","onlyMobile","disabled","setAttribute","text","putPreloader","returnDiv","html","div","innerHTML","appendChild","insertAdjacentHTML","lastElementChild","setButtonLoader","onMouseMove","openedMenu","diffX","right","diffY","bottom","closeBtnMenu","onClick","parentElement","menuOverlay","dispatchEvent","openedMenuOnClose","removeByType","openBtnMenu","menuElement","onClose","pushItem","onPop","canAnimate","insertBefore","positionMenu","pageX","pageY","side","scrollWidth","menuWidth","scrollHeight","menuHeight","body","windowWidth","windowHeight","verticalSide","sides","intermediateX","intermediateY","possibleSides","_cancelContextMenuOpening","_cancelContextMenuOpeningTimeout","cancelContextMenuOpening","clearTimeout","attachContextMenuListener","removeManual","timeout","capture","onCancel","replaceContent","node","firstChild","lastChild","replaceWith","textContent","init","preventDefault","originalEvent","clipboardData","getData","entities","parseEntities","filter","wrapRichText","noLinks","wrappingDraft","execCommand","InputState","required","validate","maxLength","showLengthOn","min","round","placeholder","plainText","processInput","labelText","firstElementChild","observer","MutationObserver","inputFake","onFakeInput","observe","characterData","childList","subtree","animate","wasInputFakeClientHeight","undefined","border","labelEl","showingLength","wasError","inputLength","diff","isError","labelOptions","clientHeight","setValueSilently","fireFakeInput","originalValue","isChanged","silent","wrapDraftText","Error","Valid","setState","appNavigationController","navigations","id","manual","log","debug","currentHash","location","hash","isPossibleSwipe","onHashChange","replaceState","pushState","item","pop","handleItem","onEscape","back","detach","onTouchEnd","onTouchMove","moved","history","scrollRestoration","good","noBlurOnPop","i","index","ret","findItemByType","splice","push","noHistory","origin","pathname","findAndSplice","single","simulateEvent","event","Event","bubbles","cancelable","sequentialDom","promises","raf","scheduled","kind","promise","scheduleFlush","do","read","write","toggleDisability","elements","disable","forEach","el","serverTimeManager","serverTimeOffset","get","to","addTaskListener","task","payload","getRichValue","field","withEntities","lines","line","join","combineSameEntities","passwordManager","invokeApi","result","currentHashPromise","newHashPromise","params","password","new_settings","email","currentPassword","invokeCrypto","newAlgo","new_algo","salt1","Uint8Array","randomize","set","newPassword","hashes","new_password_hash","inputCheckPassword","auth","saveApiUser","user","setUserAuth","code","markdownTags","bold","match","entityName","underline","italic","monospace","strikethrough","link","mentionName","getRichElementValue","selNode","selOffset","offset","nodeType","nodeValue","substr","trim","parentNode","tag","closest","getAttribute","url","href","user_id","follow","isSelected","isBlock","alt","curChild","nextSibling","findUpAttribute","attribute","isInputEmpty","hasAttribute","prefixes","Map","maxPrefixLength","setPrefix","country","prefix","country_code","formatPhoneNumber","originalStr","countriesList","country_codes","prefixCountry","str","phoneCode","slice","formatted","leftPattern","patterns","searchForPattern","pattern","mostMatchedPatternMatches","mostMatchedPattern","_pattern","patternMatches","k","split","symbol","idx","PasswordInputField","super","passwordVisible","onVisibilityClick","toggleVisible","onVisibilityClickAdditional","autocomplete","stealthy","tabIndex","cloneNode","PasswordMonkey","needFrame","loadPromise","loadAnimationFromURL","loop","autoplay","noCache","_animation","animation","currentFrame","direction","setSpeed","pause","setDirection","curFrame","play","waitForFirstFrame","LoginPage","title","subtitle"],"mappings":"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","file":"12.13ee54f57039ecb72c81.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport findUpClassName from \"../helpers/dom/findUpClassName\";\r\nimport sequentialDom from \"../helpers/sequentialDom\";\r\nimport {isTouchSupported} from \"../helpers/touchSupport\";\r\nimport rootScope from \"../lib/rootScope\";\r\n\r\nlet rippleClickId = 0;\r\nexport function ripple(elem: HTMLElement, callback: (id: number) => Promise<boolean | void> = () => Promise.resolve(), onEnd: (id: number) => void = null, prepend = false) {\r\n  //return;\r\n  if(elem.querySelector('.c-ripple')) return;\r\n  elem.classList.add('rp');\r\n  \r\n  let r = document.createElement('div');\r\n  r.classList.add('c-ripple');\r\n\r\n  const isSquare = elem.classList.contains('rp-square');\r\n  if(isSquare) {\r\n    r.classList.add('is-square');\r\n  }\r\n\r\n  elem[prepend ? 'prepend' : 'append'](r);\r\n\r\n  let handler: () => void;\r\n  //let animationEndPromise: Promise<number>;\r\n  const drawRipple = (clientX: number, clientY: number) => {\r\n    const startTime = Date.now();\r\n    const elem = document.createElement('div');\r\n\r\n    const clickId = rippleClickId++;\r\n    \r\n    //console.log('ripple drawRipple');\r\n    \r\n    const duration = +window.getComputedStyle(r).getPropertyValue('--ripple-duration').replace('s', '') * 1000;\r\n    //console.log('ripple duration', duration);\r\n\r\n    handler = () => {\r\n    //handler = () => animationEndPromise.then((duration) => {\r\n      //console.log('ripple animation was:', duration);\r\n\r\n      //const duration = isSquare || mediaSizes.isMobile ? 200 : 700;\r\n      //return;\r\n      let elapsedTime = Date.now() - startTime;\r\n      const cb = () => {\r\n        //console.log('ripple elapsedTime total pre-remove:', Date.now() - startTime);\r\n        sequentialDom.mutate(() => {\r\n          elem.remove();\r\n        });\r\n        \r\n        if(onEnd) onEnd(clickId);\r\n      };\r\n      if(elapsedTime < duration) {\r\n        let delay = Math.max(duration - elapsedTime, duration / 2);\r\n        setTimeout(() => elem.classList.add('hiding'), Math.max(delay - duration / 2, 0));\r\n\r\n        setTimeout(cb, delay);\r\n      } else {\r\n        elem.classList.add('hiding');\r\n        setTimeout(cb, duration / 2);\r\n      }\r\n\r\n      if(!isTouchSupported) {\r\n        window.removeEventListener('contextmenu', handler);\r\n      }\r\n\r\n      handler = null;\r\n      touchStartFired = false;\r\n    };\r\n    //});\r\n\r\n    callback && callback(clickId);\r\n\r\n    /* callback().then((bad) => {\r\n      if(bad) {\r\n        span.remove();\r\n        return;\r\n      } */\r\n      \r\n      //console.log('ripple after promise', Date.now() - startTime);\r\n      //console.log('ripple tooSlow:', tooSlow);\r\n      /* if(tooSlow) {\r\n        span.remove();\r\n        return;\r\n      } */\r\n\r\n      window.requestAnimationFrame(() => {\r\n        const rect = r.getBoundingClientRect();\r\n        elem.classList.add('c-ripple__circle');\r\n\r\n        const clickX = clientX - rect.left;\r\n        const clickY = clientY - rect.top;\r\n\r\n        const radius = Math.sqrt((Math.abs(clickY - rect.height / 2) + rect.height / 2) ** 2 + (Math.abs(clickX - rect.width / 2) + rect.width / 2) ** 2);\r\n        const size = radius;\r\n\r\n        // center of circle\r\n        const x = clickX - size / 2;\r\n        const y = clickY - size / 2;\r\n\r\n        //console.log('ripple click', offsetFromCenter, size, clickX, clickY);\r\n\r\n        elem.style.width = elem.style.height = size + 'px';\r\n        elem.style.left = x + 'px';\r\n        elem.style.top = y + 'px';\r\n\r\n        // нижний код выполняется с задержкой\r\n        /* animationEndPromise = new Promise((resolve) => {\r\n          span.addEventListener('animationend', () => {\r\n            // 713 -> 700\r\n            resolve(((Date.now() - startTime) / 100 | 0) * 100);\r\n          }, {once: true});\r\n        }); */\r\n        \r\n        // нижний код не всегда включает анимацию ПРИ КЛИКЕ НА ТАЧПАД БЕЗ ТАПТИК ЭНЖИНА\r\n        /* span.style.display = 'none';\r\n        r.append(span);\r\n        duration = +window.getComputedStyle(span).getPropertyValue('animation-duration').replace('s', '') * 1000;\r\n        span.style.display = ''; */\r\n\r\n        r.append(elem);\r\n\r\n        //r.classList.add('active');\r\n        //handler();\r\n      });\r\n    //});\r\n  };\r\n\r\n  const isRippleUnneeded = (e: Event) => e.target !== elem && (\r\n      ['BUTTON', 'A'].includes((e.target as HTMLElement).tagName) \r\n      || findUpClassName(e.target as HTMLElement, 'c-ripple') !== r\r\n    );\r\n\r\n  // TODO: rename this variable\r\n  let touchStartFired = false;\r\n  if(isTouchSupported) {\r\n    let touchEnd = () => {\r\n      handler && handler();\r\n    };\r\n  \r\n    elem.addEventListener('touchstart', (e) => {\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        return;\r\n      }\r\n\r\n      //console.log('ripple touchstart', e);\r\n      if(e.touches.length > 1 || touchStartFired || isRippleUnneeded(e)) {\r\n        return;\r\n      }\r\n      \r\n      //console.log('touchstart', e);\r\n      touchStartFired = true;\r\n  \r\n      let {clientX, clientY} = e.touches[0];\r\n      drawRipple(clientX, clientY);\r\n      elem.addEventListener('touchend', touchEnd, {once: true});\r\n  \r\n      window.addEventListener('touchmove', (e) => {\r\n        e.cancelBubble = true;\r\n        e.stopPropagation();\r\n        touchEnd();\r\n        elem.removeEventListener('touchend', touchEnd);\r\n      }, {once: true});\r\n    }, {passive: true});\r\n  } else {\r\n    elem.addEventListener('mousedown', (e) => {\r\n      if(![0, 2].includes(e.button)) { // only left and right buttons\r\n        return;\r\n      }\r\n\r\n      if(!rootScope.settings.animationsEnabled) {\r\n        return;\r\n      }\r\n      //console.log('ripple mousedown', e, e.target, findUpClassName(e.target as HTMLElement, 'c-ripple') === r);\r\n\r\n      if(elem.dataset.ripple === '0' || isRippleUnneeded(e)) {\r\n        return;\r\n      } else if(touchStartFired) {\r\n        touchStartFired = false;\r\n        return;\r\n      }\r\n  \r\n      let {clientX, clientY} = e;\r\n      drawRipple(clientX, clientY);\r\n      window.addEventListener('mouseup', handler, {once: true, passive: true});\r\n      window.addEventListener('contextmenu', handler, {once: true, passive: true});\r\n    }, {passive: true});\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { putPreloader } from '../components/misc';\r\nimport mediaSizes from '../helpers/mediaSizes';\r\nimport { AccountPassword } from '../layer';\r\nimport appStateManager from '../lib/appManagers/appStateManager';\r\nimport passwordManager from '../lib/mtproto/passwordManager';\r\nimport Page from './page';\r\nimport Button from '../components/button';\r\nimport PasswordInputField from '../components/passwordInputField';\r\nimport PasswordMonkey from '../components/monkeys/password';\r\nimport RichTextProcessor from '../lib/richtextprocessor';\r\nimport I18n from '../lib/langPack';\r\nimport LoginPage from './loginPage';\r\nimport { cancelEvent } from '../helpers/dom/cancelEvent';\r\nimport { attachClickEvent } from '../helpers/dom/clickEvent';\r\nimport htmlToSpan from '../helpers/dom/htmlToSpan';\r\nimport replaceContent from '../helpers/dom/replaceContent';\r\nimport toggleDisability from '../helpers/dom/toggleDisability';\r\n\r\nconst TEST = false;\r\nlet passwordInput: HTMLInputElement;\r\n\r\nlet onFirstMount = (): Promise<any> => {\r\n  const page = new LoginPage({\r\n    className: 'page-password',\r\n    withInputWrapper: true,\r\n    titleLangKey: 'Login.Password.Title',\r\n    subtitleLangKey: 'Login.Password.Subtitle'\r\n  });\r\n\r\n  const btnNext = Button('btn-primary btn-color-primary');\r\n  const btnNextI18n = new I18n.IntlElement({key: 'Login.Next'});\r\n\r\n  btnNext.append(btnNextI18n.element);\r\n\r\n  const passwordInputField = new PasswordInputField({\r\n    label: 'LoginPassword',\r\n    name: 'password'\r\n  });\r\n\r\n  passwordInput = passwordInputField.input as HTMLInputElement;\r\n\r\n  page.inputWrapper.append(passwordInputField.container, btnNext);\r\n\r\n  let getStateInterval: number;\r\n\r\n  let getState = () => {\r\n    // * just to check session relevance\r\n    if(!getStateInterval) {\r\n      getStateInterval = window.setInterval(getState, 10e3);\r\n    }\r\n\r\n    return !TEST && passwordManager.getState().then(_state => {\r\n      state = _state;\r\n\r\n      if(state.hint) {\r\n        replaceContent(passwordInputField.label, htmlToSpan(RichTextProcessor.wrapEmojiText(state.hint)));\r\n      } else {\r\n        passwordInputField.setLabel();\r\n      }\r\n    });\r\n  };\r\n\r\n  let state: AccountPassword;\r\n  \r\n  const onSubmit = (e?: Event) => {\r\n    if(e) {\r\n      cancelEvent(e);\r\n    }\r\n\r\n    if(!passwordInput.value.length) {\r\n      passwordInput.classList.add('error');\r\n      return;\r\n    }\r\n\r\n    const toggle = toggleDisability([passwordInput, btnNext], true);\r\n    let value = passwordInput.value;\r\n\r\n    btnNextI18n.update({key: 'PleaseWait'});\r\n    const preloader = putPreloader(btnNext);\r\n\r\n    passwordManager.check(value, state).then((response) => {\r\n      //console.log('passwordManager response:', response);\r\n        \r\n      switch(response._) {\r\n        case 'auth.authorization':\r\n          clearInterval(getStateInterval);\r\n          import('./pageIm').then(m => {\r\n            m.default.mount();\r\n          });\r\n          if(monkey) monkey.remove();\r\n          break;\r\n        default:\r\n          btnNext.removeAttribute('disabled');\r\n          btnNextI18n.update({key: response._ as any});\r\n          preloader.remove();\r\n          break;\r\n      }\r\n    }).catch((err: any) => {\r\n      toggle();\r\n      passwordInputField.input.classList.add('error');\r\n      \r\n      switch(err.type) {\r\n        default:\r\n          //btnNext.innerText = err.type;\r\n          btnNextI18n.update({key: 'PASSWORD_HASH_INVALID'});\r\n          passwordInput.select();\r\n          break;\r\n      }\r\n\r\n      preloader.remove();\r\n  \r\n      getState();\r\n    });\r\n  };\r\n  \r\n  attachClickEvent(btnNext, onSubmit);\r\n\r\n  passwordInput.addEventListener('keypress', function(this, e) {\r\n    this.classList.remove('error');\r\n    btnNextI18n.update({key: 'Login.Next'});\r\n\r\n    if(e.key === 'Enter') {\r\n      return onSubmit();\r\n    }\r\n  });\r\n\r\n  const size = mediaSizes.isMobile ? 100 : 166;\r\n  const monkey = new PasswordMonkey(passwordInputField, size);\r\n  page.imageDiv.append(monkey.container);\r\n  return Promise.all([\r\n    monkey.load(),\r\n    getState()\r\n  ]);\r\n};\r\n\r\nconst page = new Page('page-password', true, onFirstMount, null, () => {\r\n  //if(!isAppleMobile) {\r\n    passwordInput.focus();\r\n  //}\r\n\r\n  appStateManager.pushToState('authState', {_: 'authStatePassword'});\r\n});\r\n\r\nexport default page;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport type ListenerSetter from \"../listenerSetter\";\r\nimport { isTouchSupported } from \"../touchSupport\";\r\nimport simulateEvent from \"./dispatchEvent\";\r\n\r\nexport const CLICK_EVENT_NAME: 'mousedown' /* | 'touchend' */ | 'click' = (isTouchSupported ? 'mousedown' : 'click') as any;\r\nexport type AttachClickOptions = AddEventListenerOptions & Partial<{listenerSetter: ListenerSetter, touchMouseDown: true}>;\r\nexport function attachClickEvent(elem: HTMLElement | Window, callback: (e: /* TouchEvent |  */MouseEvent) => void, options: AttachClickOptions = {}) {\r\n  const add = options.listenerSetter ? options.listenerSetter.add(elem) : elem.addEventListener.bind(elem);\r\n  // const remove = options.listenerSetter ? options.listenerSetter.removeManual.bind(options.listenerSetter, elem) : elem.removeEventListener.bind(elem);\r\n\r\n  options.touchMouseDown = true;\r\n  /* if(options.touchMouseDown && CLICK_EVENT_NAME === 'touchend') {\r\n    add('mousedown', callback, options);\r\n  } else if(CLICK_EVENT_NAME === 'touchend') {\r\n    const o = {...options, once: true};\r\n\r\n    const onTouchStart = (e: TouchEvent) => {\r\n      const onTouchMove = (e: TouchEvent) => {\r\n        remove('touchmove', onTouchMove, o);\r\n        remove('touchend', onTouchEnd, o);\r\n      };\r\n  \r\n      const onTouchEnd = (e: TouchEvent) => {\r\n        remove('touchmove', onTouchMove, o);\r\n        callback(e);\r\n        if(options.once) {\r\n          remove('touchstart', onTouchStart);\r\n        }\r\n      };\r\n  \r\n      add('touchend', onTouchEnd, o);\r\n      add('touchmove', onTouchMove, o);\r\n    };\r\n\r\n    add('touchstart', onTouchStart);\r\n  } else {\r\n    add(CLICK_EVENT_NAME, callback, options);\r\n  } */\r\n  add(CLICK_EVENT_NAME, callback, options);\r\n}\r\n\r\nexport function detachClickEvent(elem: HTMLElement, callback: (e: TouchEvent | MouseEvent) => void, options?: AddEventListenerOptions) {\r\n  // if(CLICK_EVENT_NAME === 'touchend') {\r\n  //   elem.removeEventListener('touchstart', callback, options);\r\n  // } else {\r\n    elem.removeEventListener(CLICK_EVENT_NAME, callback, options);\r\n  // }\r\n}\r\n\r\nexport function simulateClickEvent(elem: HTMLElement) {\r\n  simulateEvent(elem, CLICK_EVENT_NAME);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { i18n, LangPackKey } from \"../lib/langPack\";\r\nimport { ripple } from \"./ripple\";\r\n\r\nconst Button = (className: string, options: Partial<{\r\n  noRipple: true, \r\n  onlyMobile: true, \r\n  icon: string, \r\n  rippleSquare: true, \r\n  text: LangPackKey, \r\n  disabled: boolean,\r\n  asDiv: boolean\r\n}> = {}) => {\r\n  const button: HTMLButtonElement = document.createElement(options.asDiv ? 'div' : 'button') as any;\r\n  button.className = className + (options.icon ? ' tgico-' + options.icon : '');\r\n\r\n  if(!options.noRipple) {\r\n    if(options.rippleSquare) {\r\n      button.classList.add('rp-square');\r\n    }\r\n\r\n    ripple(button);\r\n  }\r\n\r\n  if(options.onlyMobile) {\r\n    button.classList.add('only-handhelds');\r\n  }\r\n\r\n  if(options.disabled) {\r\n    button.setAttribute('disabled', 'true');\r\n  }\r\n\r\n  if(options.text) {\r\n    button.append(i18n(options.text));\r\n  }\r\n\r\n  return button;\r\n};\r\n\r\nexport default Button;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport { CLICK_EVENT_NAME } from \"../helpers/dom/clickEvent\";\r\nimport ListenerSetter from \"../helpers/listenerSetter\";\r\nimport mediaSizes from \"../helpers/mediaSizes\";\r\nimport { isTouchSupported } from \"../helpers/touchSupport\";\r\nimport { isApple, isMobileSafari } from \"../helpers/userAgent\";\r\nimport rootScope from \"../lib/rootScope\";\r\nimport appNavigationController from \"./appNavigationController\";\r\n\r\nexport function putPreloader(elem: Element, returnDiv = false): HTMLElement {\r\n  const html = `\r\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"preloader-circular\" viewBox=\"25 25 50 50\">\r\n  <circle class=\"preloader-path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-miterlimit=\"10\"/>\r\n  </svg>`;\r\n\r\n  if(returnDiv) {\r\n    const div = document.createElement('div');\r\n    div.classList.add('preloader');\r\n    div.innerHTML = html;\r\n\r\n    if(elem) {\r\n      elem.appendChild(div);\r\n    }\r\n\r\n    return div;\r\n  }\r\n  \r\n  elem.insertAdjacentHTML('beforeend', html);\r\n  return elem.lastElementChild as HTMLElement;\r\n}\r\n\r\nMOUNT_CLASS_TO.putPreloader = putPreloader;\r\n\r\nexport function setButtonLoader(elem: HTMLButtonElement, icon = 'check') {\r\n  elem.classList.remove('tgico-' + icon);\r\n  elem.disabled = true;\r\n  putPreloader(elem);\r\n\r\n  return () => {\r\n    elem.innerHTML = '';\r\n    elem.classList.add('tgico-' + icon);\r\n    elem.removeAttribute('disabled');\r\n  };\r\n}\r\n\r\n/* export function parseMenuButtonsTo(to: {[name: string]: HTMLElement}, elements: HTMLCollection | NodeListOf<HTMLElement>) {\r\n  Array.from(elements).forEach(el => {\r\n    const match = el.className.match(/(?:^|\\s)menu-(.+?)(?:$|\\s)/);\r\n    if(!match) return;\r\n    to[match[1]] = el as HTMLElement;\r\n  });\r\n} */\r\n\r\nlet onMouseMove = (e: MouseEvent) => {\r\n  let rect = openedMenu.getBoundingClientRect();\r\n  let {clientX, clientY} = e;\r\n  \r\n  let diffX = clientX >= rect.right ? clientX - rect.right : rect.left - clientX;\r\n  let diffY = clientY >= rect.bottom ? clientY - rect.bottom : rect.top - clientY;\r\n  \r\n  if(diffX >= 100 || diffY >= 100) {\r\n    closeBtnMenu();\r\n    //openedMenu.parentElement.click();\r\n  }\r\n  //console.log('mousemove', diffX, diffY);\r\n};\r\n\r\nconst onClick = (e: MouseEvent | TouchEvent) => {\r\n  //cancelEvent(e);\r\n  closeBtnMenu();\r\n};\r\n\r\n// ! no need in this due to the same handler in appNavigationController\r\n/* const onKeyDown = (e: KeyboardEvent) => {\r\n  if(e.key === 'Escape') {\r\n    closeBtnMenu();\r\n    cancelEvent(e);\r\n  }\r\n}; */\r\n\r\nexport const closeBtnMenu = () => {\r\n  if(openedMenu) {\r\n    openedMenu.classList.remove('active');\r\n    openedMenu.parentElement.classList.remove('menu-open');\r\n    //openedMenu.previousElementSibling.remove(); // remove overlay\r\n    if(menuOverlay) menuOverlay.remove();\r\n    openedMenu = null;\r\n\r\n    rootScope.dispatchEvent('context_menu_toggle', false);\r\n  }\r\n  \r\n  if(openedMenuOnClose) {\r\n    openedMenuOnClose();\r\n    openedMenuOnClose = null;\r\n  }\r\n\r\n  if(!isTouchSupported) {\r\n    window.removeEventListener('mousemove', onMouseMove);\r\n    //window.removeEventListener('keydown', onKeyDown, {capture: true});\r\n    window.removeEventListener('contextmenu', onClick);\r\n  }\r\n\r\n  document.removeEventListener(CLICK_EVENT_NAME, onClick);\r\n\r\n  if(!isMobileSafari) {\r\n    appNavigationController.removeByType('menu');\r\n  }\r\n};\r\n\r\nwindow.addEventListener('resize', () => {\r\n  if(openedMenu) {\r\n    closeBtnMenu();\r\n  }\r\n  \r\n  /* if(openedMenu && (openedMenu.style.top || openedMenu.style.left)) {\r\n    const rect = openedMenu.getBoundingClientRect();\r\n    const {innerWidth, innerHeight} = window;\r\n\r\n    console.log(innerWidth, innerHeight, rect);\r\n  } */\r\n});\r\n\r\nlet openedMenu: HTMLElement = null, openedMenuOnClose: () => void = null, menuOverlay: HTMLElement = null;\r\nexport function openBtnMenu(menuElement: HTMLElement, onClose?: () => void) {\r\n  closeBtnMenu();\r\n\r\n  if(!isMobileSafari) {\r\n    appNavigationController.pushItem({\r\n      type: 'menu',\r\n      onPop: (canAnimate) => {\r\n        closeBtnMenu();\r\n      }\r\n    });\r\n  }\r\n  \r\n  openedMenu = menuElement;\r\n  openedMenu.classList.add('active');\r\n  openedMenu.parentElement.classList.add('menu-open');\r\n\r\n  if(!menuOverlay) {\r\n    menuOverlay = document.createElement('div');\r\n    menuOverlay.classList.add('btn-menu-overlay');\r\n\r\n    // ! because this event must be canceled, and can't cancel on menu click (below)\r\n    menuOverlay.addEventListener(CLICK_EVENT_NAME, (e) => {\r\n      cancelEvent(e);\r\n      onClick(e);\r\n    });\r\n  }\r\n\r\n  openedMenu.parentElement.insertBefore(menuOverlay, openedMenu);\r\n\r\n  //document.body.classList.add('disable-hover');\r\n  \r\n  openedMenuOnClose = onClose;\r\n\r\n  if(!isTouchSupported) {\r\n    window.addEventListener('mousemove', onMouseMove);\r\n    //window.addEventListener('keydown', onKeyDown, {capture: true});\r\n    window.addEventListener('contextmenu', onClick, {once: true});\r\n  }\r\n\r\n  /* // ! because this event must be canceled, and can't cancel on menu click (below)\r\n  overlay.addEventListener(CLICK_EVENT_NAME, (e) => {\r\n    cancelEvent(e);\r\n    onClick(e);\r\n  }); */\r\n  \r\n  // ! safari iOS doesn't handle window click event on overlay, idk why\r\n  document.addEventListener(CLICK_EVENT_NAME, onClick);\r\n\r\n  rootScope.dispatchEvent('context_menu_toggle', true);\r\n}\r\n\r\nconst PADDING_TOP = 8;\r\nconst PADDING_LEFT = 8;\r\nexport function positionMenu({pageX, pageY}: MouseEvent | Touch, elem: HTMLElement, side?: 'left' | 'right' | 'center') {\r\n  //let {clientX, clientY} = e;\r\n\r\n  // * side mean the OPEN side\r\n\r\n  let {scrollWidth: menuWidth, scrollHeight: menuHeight} = elem;\r\n  //let {innerWidth: windowWidth, innerHeight: windowHeight} = window;\r\n  const rect = document.body.getBoundingClientRect();\r\n  const windowWidth = rect.width;\r\n  const windowHeight = rect.height;\r\n\r\n  side = mediaSizes.isMobile ? 'right' : 'left';\r\n  let verticalSide: 'top' /* | 'bottom' */ | 'center' = 'top';\r\n\r\n  const getSides = () => {\r\n    return {\r\n      x: {\r\n        left: pageX,\r\n        right: pageX - menuWidth\r\n      },\r\n      intermediateX: side === 'right' ? PADDING_LEFT : windowWidth - menuWidth - PADDING_LEFT,\r\n      //intermediateX: clientX < windowWidth / 2 ? PADDING_LEFT : windowWidth - menuWidth - PADDING_LEFT,\r\n      y: {\r\n        top: pageY,\r\n        bottom: pageY - menuHeight\r\n      },\r\n      //intermediateY: verticalSide === 'top' ? PADDING_TOP : windowHeight - menuHeight - PADDING_TOP,\r\n      intermediateY: pageY < windowHeight / 2 ? PADDING_TOP : windowHeight - menuHeight - PADDING_TOP,\r\n    };\r\n  };\r\n\r\n  const sides = getSides();\r\n\r\n  const possibleSides = {\r\n    x: {\r\n      left: sides.x.left + menuWidth + PADDING_LEFT <= windowWidth,\r\n      right: sides.x.right >= PADDING_LEFT\r\n    },\r\n    y: {\r\n      top: sides.y.top + menuHeight + PADDING_TOP <= windowHeight,\r\n      bottom: sides.y.bottom - PADDING_TOP >= PADDING_TOP\r\n    }\r\n  };\r\n\r\n  /* if(side === undefined) {\r\n    if((clientX + menuWidth + PADDING_LEFT) > windowWidth) {\r\n      side = 'right';\r\n    }\r\n  } */\r\n\r\n  {\r\n    /* const x = sides.x;\r\n\r\n    const s = Object.keys(x) as (keyof typeof possibleSides.x)[];\r\n    if(side) {\r\n      s.findAndSplice(s => s === side);\r\n      s.unshift(side);\r\n    }\r\n\r\n    const possibleSide = s.find(s => possibleSides.x[s]); */\r\n    let left: number;\r\n    /* if(possibleSide) {\r\n      left = x[possibleSide];\r\n      side = possibleSide;\r\n    } else {\r\n      left = sides.intermediateX;\r\n      side = undefined;\r\n    } */\r\n    left = possibleSides.x[side] ? sides.x[side] : (side = 'center', sides.intermediateX);\r\n  \r\n    elem.style.left = left + 'px';\r\n  }\r\n\r\n  /* if((clientY + menuHeight + PADDING_TOP) > windowHeight) {\r\n    elem.style.top = clamp(clientY - menuHeight, PADDING_TOP, windowHeight - menuHeight - PADDING_TOP) + 'px';\r\n    // elem.style.top = (innerHeight - scrollHeight - PADDING_TOP) + 'px';\r\n    verticalSide = 'bottom';\r\n  } else {\r\n    elem.style.top = Math.max(PADDING_TOP, clientY) + 'px';\r\n    verticalSide = 'top';\r\n  } */\r\n\r\n  {\r\n    let top: number;\r\n\r\n    top = possibleSides.y[verticalSide] ? sides.y[verticalSide] : (verticalSide = 'center', sides.intermediateY);\r\n  \r\n    elem.style.top = top + 'px';\r\n  }\r\n  \r\n  elem.className = elem.className.replace(/(top|center|bottom)-(left|center|right)/g, '');\r\n  elem.classList.add(\r\n    //(verticalSide === 'center' ? verticalSide : (verticalSide === 'bottom' ? 'top' : 'bottom')) +\r\n    (verticalSide === 'center' ? verticalSide : 'bottom') +\r\n    '-' +\r\n    (side === 'center' ? side : (side === 'left' ? 'right' : 'left')));\r\n}\r\n\r\nlet _cancelContextMenuOpening = false, _cancelContextMenuOpeningTimeout = 0;\r\nexport function cancelContextMenuOpening() {\r\n  if(_cancelContextMenuOpeningTimeout) {\r\n    clearTimeout(_cancelContextMenuOpeningTimeout);\r\n  }\r\n    \r\n  _cancelContextMenuOpeningTimeout = window.setTimeout(() => {\r\n    _cancelContextMenuOpeningTimeout = 0;\r\n    _cancelContextMenuOpening = false;\r\n  }, .4e3);\r\n\r\n  _cancelContextMenuOpening = true;\r\n}\r\n\r\nexport function attachContextMenuListener(element: HTMLElement, callback: (e: Touch | MouseEvent) => void, listenerSetter?: ListenerSetter) {\r\n  const add = listenerSetter ? listenerSetter.add(element) : element.addEventListener.bind(element);\r\n  const remove = listenerSetter ? listenerSetter.removeManual.bind(listenerSetter, element) : element.removeEventListener.bind(element);\r\n\r\n  if(isApple && isTouchSupported) {\r\n    let timeout: number;\r\n\r\n    const options: EventListenerOptions = {capture: true};\r\n\r\n    const onCancel = () => {\r\n      clearTimeout(timeout);\r\n      // @ts-ignore\r\n      remove('touchmove', onCancel, options);\r\n      // @ts-ignore\r\n      remove('touchend', onCancel, options);\r\n      // @ts-ignore\r\n      remove('touchcancel', onCancel, options);\r\n    };\r\n\r\n    add('touchstart', (e: TouchEvent) => {\r\n      if(e.touches.length > 1) {\r\n        onCancel();\r\n        return;\r\n      }\r\n  \r\n      add('touchmove', onCancel, options);\r\n      add('touchend', onCancel, options);\r\n      add('touchcancel', onCancel, options);\r\n\r\n      timeout = window.setTimeout(() => {\r\n        if(_cancelContextMenuOpening) {\r\n          onCancel();\r\n          return;\r\n        }\r\n\r\n        callback(e.touches[0]);\r\n        onCancel();\r\n\r\n        if(openedMenu) {\r\n          element.addEventListener('touchend', cancelEvent, {once: true}); // * fix instant closing\r\n        }\r\n      }, .4e3);\r\n    });\r\n\r\n    /* if(!isSafari) {\r\n      add('contextmenu', (e: any) => {\r\n        cancelEvent(e);\r\n      }, {passive: false, capture: true});\r\n    } */\r\n  } else {\r\n    add('contextmenu', isTouchSupported ? (e: any) => {\r\n      callback(e);\r\n\r\n      if(openedMenu) {\r\n        element.addEventListener('touchend', cancelEvent, {once: true}); // * fix instant closing\r\n      }\r\n    } : callback);\r\n  }\r\n};\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function replaceContent(elem: HTMLElement, node: string | Node) {\r\n  if(typeof(node) === 'string') {\r\n    elem.innerHTML = node;\r\n    return;\r\n  }\r\n\r\n  // * children.length doesn't count text nodes\r\n  const firstChild = elem.firstChild;\r\n  if(firstChild) {\r\n    if(elem.lastChild === firstChild) {\r\n      firstChild.replaceWith(node);\r\n    } else {\r\n      elem.textContent = '';\r\n      elem.append(node);\r\n    }\r\n  } else {\r\n    elem.append(node);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport simulateEvent from \"../helpers/dom/dispatchEvent\";\r\nimport findUpAttribute from \"../helpers/dom/findUpAttribute\";\r\nimport getRichValue from \"../helpers/dom/getRichValue\";\r\nimport isInputEmpty from \"../helpers/dom/isInputEmpty\";\r\nimport { i18n, LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport RichTextProcessor from \"../lib/richtextprocessor\";\r\n\r\nlet init = () => {\r\n  document.addEventListener('paste', (e) => {\r\n    if(!findUpAttribute(e.target, 'contenteditable=\"true\"')) {\r\n      return;\r\n    }\r\n    //console.log('document paste');\r\n\r\n    //console.log('messageInput paste');\r\n\r\n    e.preventDefault();\r\n    // @ts-ignore\r\n    let text = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n\r\n    let entities = RichTextProcessor.parseEntities(text);\r\n    //console.log('messageInput paste', text, entities);\r\n    entities = entities.filter(e => e._ === 'messageEntityEmoji' || e._ === 'messageEntityLinebreak');\r\n    //text = RichTextProcessor.wrapEmojiText(text);\r\n    text = RichTextProcessor.wrapRichText(text, {entities, noLinks: true, wrappingDraft: true});\r\n\r\n    // console.log('messageInput paste after', text);\r\n\r\n    // @ts-ignore\r\n    //let html = (e.originalEvent || e).clipboardData.getData('text/html');\r\n\r\n    // @ts-ignore\r\n    //console.log('paste text', text, );\r\n    window.document.execCommand('insertHTML', false, text);\r\n  });\r\n\r\n  init = null;\r\n};\r\n\r\n// ! it doesn't respect symbols other than strongs\r\n/* const checkAndSetRTL = (input: HTMLElement) => {\r\n  //const isEmpty = isInputEmpty(input);\r\n  //console.log('input', isEmpty);\r\n\r\n  //const char = [...getRichValue(input)][0];\r\n  const char = (input instanceof HTMLInputElement ? input.value : input.innerText)[0];\r\n  let direction = 'ltr';\r\n  if(char && checkRTL(char)) {\r\n    direction = 'rtl';\r\n  }\r\n\r\n  //console.log('RTL', direction, char);\r\n\r\n  input.style.direction = direction;\r\n}; */\r\n\r\nexport enum InputState {\r\n  Neutral = 0,\r\n  Valid = 1,\r\n  Error = 2\r\n};\r\n\r\nexport type InputFieldOptions = {\r\n  placeholder?: LangPackKey, \r\n  label?: LangPackKey, \r\n  labelOptions?: any[],\r\n  labelText?: string,\r\n  name?: string, \r\n  maxLength?: number, \r\n  showLengthOn?: number,\r\n  plainText?: true,\r\n  animate?: true,\r\n  required?: boolean,\r\n  validate?: () => boolean\r\n};\r\n\r\nclass InputField {\r\n  public container: HTMLElement;\r\n  public input: HTMLElement;\r\n  public inputFake: HTMLElement;\r\n  public label: HTMLLabelElement;\r\n\r\n  public originalValue: string;\r\n\r\n  public required: boolean;\r\n  public validate: () => boolean;\r\n\r\n  //public onLengthChange: (length: number, isOverflow: boolean) => void;\r\n  protected wasInputFakeClientHeight: number;\r\n  // protected showScrollDebounced: () => void;\r\n\r\n  constructor(public options: InputFieldOptions = {}) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('input-field');\r\n\r\n    this.required = options.required;\r\n    this.validate = options.validate;\r\n\r\n    if(options.maxLength) {\r\n      options.showLengthOn = Math.min(40, Math.round(options.maxLength / 3));\r\n    }\r\n\r\n    const {placeholder, maxLength, showLengthOn, name, plainText} = options;\r\n\r\n    let label = options.label || options.labelText;\r\n\r\n    let input: HTMLElement;\r\n    if(!plainText) {\r\n      if(init) {\r\n        init();\r\n      }\r\n\r\n      this.container.innerHTML = `\r\n      <div contenteditable=\"true\" class=\"input-field-input\"></div>\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      const observer = new MutationObserver(() => {\r\n        //checkAndSetRTL(input);\r\n\r\n        if(processInput) {\r\n          processInput();\r\n        }\r\n      });\r\n\r\n      // * because if delete all characters there will br left\r\n      input.addEventListener('input', () => {\r\n        if(isInputEmpty(input)) {\r\n          input.innerHTML = '';\r\n        }\r\n\r\n        if(this.inputFake) {\r\n          this.inputFake.innerHTML = input.innerHTML;\r\n          this.onFakeInput();\r\n        }\r\n      });\r\n      \r\n      // ! childList for paste first symbol\r\n      observer.observe(input, {characterData: true, childList: true, subtree: true});\r\n\r\n      if(options.animate) {\r\n        input.classList.add('scrollable', 'scrollable-y');\r\n        this.wasInputFakeClientHeight = 0;\r\n        // this.showScrollDebounced = debounce(() => this.input.classList.remove('no-scrollbar'), 150, false, true);\r\n        this.inputFake = document.createElement('div');\r\n        this.inputFake.setAttribute('contenteditable', 'true');\r\n        this.inputFake.className = input.className + ' input-field-input-fake';\r\n      }\r\n    } else {\r\n      this.container.innerHTML = `\r\n      <input type=\"text\" ${name ? `name=\"${name}\"` : ''} autocomplete=\"off\" ${label ? 'required=\"\"' : ''} class=\"input-field-input\">\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      //input.addEventListener('input', () => checkAndSetRTL(input));\r\n    }\r\n\r\n    input.setAttribute('dir', 'auto');\r\n\r\n    if(placeholder) {\r\n      _i18n(input, placeholder, undefined, 'placeholder');\r\n\r\n      if(this.inputFake) {\r\n        _i18n(this.inputFake, placeholder, undefined, 'placeholder');\r\n      }\r\n    }\r\n\r\n    if(label || placeholder) {\r\n      const border = document.createElement('div');\r\n      border.classList.add('input-field-border');\r\n      this.container.append(border);\r\n    }\r\n\r\n    if(label) {\r\n      this.label = document.createElement('label');\r\n      this.setLabel();\r\n      this.container.append(this.label);\r\n    }\r\n\r\n    let processInput: () => void;\r\n    if(maxLength) {\r\n      const labelEl = this.container.lastElementChild as HTMLLabelElement;\r\n      let showingLength = false;\r\n\r\n      processInput = () => {\r\n        const wasError = input.classList.contains('error');\r\n        // * https://stackoverflow.com/a/54369605 #2 to count emoji as 1 symbol\r\n        const inputLength = plainText ? (input as HTMLInputElement).value.length : [...getRichValue(input, false).value].length;\r\n        const diff = maxLength - inputLength;\r\n        const isError = diff < 0;\r\n        input.classList.toggle('error', isError);\r\n\r\n        //this.onLengthChange && this.onLengthChange(inputLength, isError);\r\n\r\n        if(isError || diff <= showLengthOn) {\r\n          this.setLabel();\r\n          labelEl.append(` (${maxLength - inputLength})`);\r\n          if(!showingLength) showingLength = true;\r\n        } else if((wasError && !isError) || showingLength) {\r\n          this.setLabel();\r\n          showingLength = false;\r\n        }\r\n      };\r\n\r\n      input.addEventListener('input', processInput);\r\n    }\r\n\r\n    this.input = input;\r\n  }\r\n\r\n  public select() {\r\n    if((this.input as HTMLInputElement).value) { // * avoid selecting whole empty field on iOS devices\r\n      (this.input as HTMLInputElement).select(); // * select text\r\n    }\r\n  }\r\n\r\n  public setLabel() {\r\n    this.label.textContent = '';\r\n    if(this.options.labelText) {\r\n      this.label.innerHTML = this.options.labelText;\r\n    } else {\r\n      this.label.append(i18n(this.options.label, this.options.labelOptions));\r\n    }\r\n  }\r\n\r\n  public onFakeInput() {\r\n    const {scrollHeight, clientHeight} = this.inputFake;\r\n    /* if(this.wasInputFakeClientHeight && this.wasInputFakeClientHeight !== clientHeight) {\r\n      this.input.classList.add('no-scrollbar'); // ! в сафари может вообще не появиться скролл после анимации, так как ему нужен полный reflow блока с overflow.\r\n      this.showScrollDebounced();\r\n    } */\r\n\r\n    this.wasInputFakeClientHeight = clientHeight;\r\n    this.input.style.height = scrollHeight ? scrollHeight + 'px' : '';\r\n  }\r\n\r\n  get value() {\r\n    return this.options.plainText ? (this.input as HTMLInputElement).value : getRichValue(this.input, false).value;\r\n    //return getRichValue(this.input);\r\n  }\r\n\r\n  set value(value: string) {\r\n    this.setValueSilently(value, false);\r\n\r\n    simulateEvent(this.input, 'input');\r\n  }\r\n\r\n  public setValueSilently(value: string, fireFakeInput = true) {\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).value = value;\r\n    } else {\r\n      this.input.innerHTML = value;\r\n      \r\n      if(this.inputFake) {\r\n        this.inputFake.innerHTML = value;\r\n\r\n        if(fireFakeInput) {\r\n          this.onFakeInput();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public isChanged() {\r\n    return this.value !== this.originalValue;\r\n  }\r\n\r\n  public isValid() {\r\n    return !this.input.classList.contains('error') && \r\n      this.isChanged() && \r\n      (!this.validate || this.validate()) && \r\n      (!this.required || !isInputEmpty(this.input));\r\n  }\r\n\r\n  public setOriginalValue(value: InputField['originalValue'] = '', silent = false) {\r\n    this.originalValue = value;\r\n\r\n    if(!this.options.plainText) {\r\n      value = RichTextProcessor.wrapDraftText(value);\r\n    }\r\n\r\n    if(silent) {\r\n      this.setValueSilently(value, false); \r\n    } else {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  public setState(state: InputState, label?: LangPackKey) {\r\n    if(label) {\r\n      this.label.textContent = '';\r\n      this.label.append(i18n(label, this.options.labelOptions));\r\n    }\r\n\r\n    this.input.classList.toggle('error', !!(state & InputState.Error));\r\n    this.input.classList.toggle('valid', !!(state & InputState.Valid));\r\n  }\r\n\r\n  public setError(label?: LangPackKey) {\r\n    this.setState(InputState.Error, label);\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport { isMobileSafari } from \"../helpers/userAgent\";\r\nimport { logger } from \"../lib/logger\";\r\nimport { doubleRaf } from \"../helpers/schedulers\";\r\nimport blurActiveElement from \"../helpers/dom/blurActiveElement\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\n\r\nexport type NavigationItem = {\r\n  type: 'left' | 'right' | 'im' | 'chat' | 'popup' | 'media' | 'menu' | \r\n    'esg' | 'multiselect' | 'input-helper' | 'autocomplete-helper' | 'markup' | 'global-search',\r\n  onPop: (canAnimate: boolean) => boolean | void,\r\n  onEscape?: () => boolean,\r\n  noHistory?: boolean,\r\n  noBlurOnPop?: boolean,\r\n};\r\n\r\nexport class AppNavigationController {\r\n  private navigations: Array<NavigationItem> = [];\r\n  private id = Date.now();\r\n  private manual = false;\r\n  private log = logger('NC');\r\n  private debug = true;\r\n  private currentHash = window.location.hash;\r\n  public onHashChange: () => void;\r\n\r\n  constructor() {\r\n    let isPossibleSwipe = false;\r\n    window.addEventListener('popstate', (e) => {\r\n      this.debug && this.log('popstate', e, isPossibleSwipe);\r\n\r\n      if(window.location.hash !== this.currentHash) {\r\n        this.onHashChange && this.onHashChange();\r\n        this.replaceState();\r\n        return;\r\n      }\r\n      this.currentHash = window.location.hash;\r\n\r\n      const id: number = e.state;\r\n      if(id !== this.id/*  && !this.navigations.length */) {\r\n        this.pushState();\r\n        return;\r\n      }\r\n\r\n      const item = this.navigations.pop();\r\n      if(!item) {\r\n        this.pushState();\r\n        return;\r\n      }\r\n\r\n      this.manual = !isPossibleSwipe;\r\n      this.handleItem(item);\r\n      //this.pushState(); // * prevent adding forward arrow\r\n    });\r\n\r\n    window.addEventListener('keydown', (e) => {\r\n      const item = this.navigations[this.navigations.length - 1];\r\n      if(!item) return;\r\n      if(e.key === 'Escape' && (item.onEscape ? item.onEscape() : true)) {\r\n        cancelEvent(e);\r\n        this.back(item.type);\r\n      }\r\n    }, {capture: true, passive: false});\r\n\r\n    if(isMobileSafari) {\r\n      const options = {passive: true};\r\n      window.addEventListener('touchstart', (e) => {\r\n        if(e.touches.length > 1) return;\r\n        this.debug && this.log('touchstart');\r\n\r\n        const detach = () => {\r\n          window.removeEventListener('touchend', onTouchEnd);\r\n          window.removeEventListener('touchmove', onTouchMove);\r\n        };\r\n\r\n        let moved = false;\r\n        const onTouchMove = (e: TouchEvent) => {\r\n          this.debug && this.log('touchmove');\r\n          if(e.touches.length > 1) {\r\n            detach();\r\n            return;\r\n          }\r\n\r\n          moved = true;\r\n        };\r\n\r\n        const onTouchEnd = (e: TouchEvent) => {\r\n          this.debug && this.log('touchend');\r\n          if(e.touches.length > 1 || !moved) {\r\n            detach();\r\n            return;\r\n          }\r\n\r\n          isPossibleSwipe = true;\r\n          doubleRaf().then(() => {\r\n            isPossibleSwipe = false;\r\n          });\r\n\r\n          detach();\r\n        };\r\n\r\n        window.addEventListener('touchend', onTouchEnd, options);\r\n        window.addEventListener('touchmove', onTouchMove, options);\r\n      }, options);\r\n    }\r\n\r\n    history.scrollRestoration = 'manual';\r\n\r\n    this.pushState(); // * push init state\r\n  }\r\n\r\n  private handleItem(item: NavigationItem) {\r\n    const good = item.onPop(!this.manual ? false : undefined);\r\n    this.debug && this.log('popstate, navigation:', item, this.navigations);\r\n    if(good === false) {\r\n      this.pushItem(item);\r\n    } else if(!item.noBlurOnPop) {\r\n      blurActiveElement(); // no better place for it\r\n    }\r\n\r\n    this.manual = false;\r\n  }\r\n\r\n  public findItemByType(type: NavigationItem['type']) {\r\n    for(let i = this.navigations.length - 1; i >= 0; --i) {\r\n      const item = this.navigations[i];\r\n      if(item.type === type) {\r\n        return {item, index: i};\r\n      }\r\n    }\r\n  }\r\n\r\n  public back(type?: NavigationItem['type']) {\r\n    if(type) {\r\n      const ret = this.findItemByType(type);\r\n      if(ret) {\r\n        this.manual = true;\r\n        // ! commented because 'popstate' event will be fired with delay\r\n        //if(ret.index !== (this.navigations.length - 1)) {\r\n          this.navigations.splice(ret.index, 1);\r\n          this.handleItem(ret.item);\r\n          return;\r\n        //}\r\n      }\r\n    }\r\n\r\n    history.back();\r\n  }\r\n\r\n  public pushItem(item: NavigationItem) {\r\n    this.navigations.push(item);\r\n    this.debug && this.log('pushstate', item, this.navigations);\r\n\r\n    if(!item.noHistory) {\r\n      this.pushState();\r\n    }\r\n  }\r\n\r\n  private pushState() {\r\n    this.manual = false;\r\n    history.pushState(this.id, '');\r\n  }\r\n\r\n  public replaceState() {\r\n    history.replaceState(this.id, '', location.origin + location.pathname);\r\n  }\r\n\r\n  public removeItem(item: NavigationItem) {\r\n    this.navigations.findAndSplice(i => i === item);\r\n  }\r\n\r\n  public removeByType(type: NavigationItem['type'], single = false) {\r\n    for(let i = this.navigations.length - 1; i >= 0; --i) {\r\n      const item = this.navigations[i];\r\n      if(item.type === type) {\r\n        this.navigations.splice(i, 1);\r\n\r\n        if(single) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst appNavigationController = new AppNavigationController();\r\nMOUNT_CLASS_TO.appNavigationController = appNavigationController;\r\nexport default appNavigationController;\r\n","export default function simulateEvent(elem: HTMLElement, name: string) {\n  const event = new Event(name, {bubbles: true, cancelable: true});\n  elem.dispatchEvent(event);\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { fastRaf } from \"./schedulers\";\r\nimport { CancellablePromise, deferredPromise } from \"./cancellablePromise\";\r\nimport { MOUNT_CLASS_TO } from \"../config/debug\";\r\nimport isInDOM from \"./dom/isInDOM\";\r\n\r\nclass SequentialDom {\r\n  private promises: Partial<{\r\n    read: CancellablePromise<void>,\r\n    write: CancellablePromise<void>\r\n  }> = {};\r\n  private raf = fastRaf.bind(null);\r\n  private scheduled = false;\r\n\r\n  private do(kind: keyof SequentialDom['promises'], callback?: VoidFunction) {\r\n    let promise = this.promises[kind];\r\n    if(!promise) {\r\n      this.scheduleFlush();\r\n      promise = this.promises[kind] = deferredPromise<void>();\r\n    }\r\n\r\n    if(callback !== undefined) {\r\n      promise.then(() => callback());\r\n    }\r\n    \r\n    return promise;\r\n  }\r\n\r\n  public measure(callback?: VoidFunction) {\r\n    return this.do('read', callback);\r\n  }\r\n\r\n  public mutate(callback?: VoidFunction) {\r\n    return this.do('write', callback);\r\n  }\r\n\r\n  /**\r\n   * Will fire instantly if element is not connected\r\n   * @param element \r\n   * @param callback \r\n   */\r\n  public mutateElement(element: HTMLElement, callback?: VoidFunction) {\r\n    const promise = isInDOM(element) ? this.mutate() : Promise.resolve();\r\n\r\n    if(callback !== undefined) {\r\n      promise.then(() => callback());\r\n    }\r\n\r\n    return promise;\r\n  }\r\n\r\n  private scheduleFlush() {\r\n    if(!this.scheduled) {\r\n      this.scheduled = true;\r\n\r\n      this.raf(() => {\r\n        this.promises.read && this.promises.read.resolve();\r\n        this.promises.write && this.promises.write.resolve();\r\n\r\n        this.scheduled = false;\r\n        this.promises = {};\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst sequentialDom = new SequentialDom();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.sequentialDom = sequentialDom);\r\nexport default sequentialDom;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean) {\r\n  if(disable) {\r\n    elements.forEach(el => el.setAttribute('disabled', 'true'));\r\n  } else {\r\n    elements.forEach(el => el.removeAttribute('disabled'));\r\n  }\r\n\r\n  return () => toggleDisability(elements, !disable);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { ApplyServerTimeOffsetTask } from './timeManager';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\n// import { tsNow } from '../../helpers/date';\r\nimport sessionStorage from '../sessionStorage';\r\nimport apiManager from './mtprotoworker';\r\n\r\nexport class ServerTimeManager {\r\n  /* private midnightNoOffset: number;\r\n  private midnightOffseted: Date;\r\n\r\n  private midnightOffset: number; */\r\n\r\n  public serverTimeOffset: number; // in seconds\r\n  /* private timeParams: {\r\n    midnightOffset: number,\r\n    serverTimeOffset: number\r\n  }; */\r\n\r\n  constructor() {\r\n    /* const timestampNow = tsNow(true);\r\n    this.midnightNoOffset = timestampNow - (timestampNow % 86400);\r\n    this.midnightOffseted = new Date();\r\n    this.midnightOffseted.setHours(0, 0, 0, 0);\r\n    \r\n    this.midnightOffset = this.midnightNoOffset - (Math.floor(+this.midnightOffseted / 1000)); */\r\n\r\n    this.serverTimeOffset = 0;\r\n    /* this.timeParams = {\r\n      midnightOffset: this.midnightOffset,\r\n      serverTimeOffset: this.serverTimeOffset\r\n    }; */\r\n\r\n    sessionStorage.get('server_time_offset').then((to) => {\r\n      if(to) {\r\n        this.serverTimeOffset = to;\r\n        // this.timeParams.serverTimeOffset = to;\r\n      }\r\n    });\r\n\r\n    apiManager.addTaskListener('applyServerTimeOffset', (task: ApplyServerTimeOffsetTask) => {\r\n      this.serverTimeOffset = task.payload;\r\n    });\r\n  }\r\n}\r\n\r\nconst serverTimeManager = new ServerTimeManager();\r\nMOUNT_CLASS_TO && (MOUNT_CLASS_TO.serverTimeManager = serverTimeManager);\r\nexport default serverTimeManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { MessageEntity } from \"../../layer\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport getRichElementValue from \"./getRichElementValue\";\r\n\r\nexport default function getRichValue(field: HTMLElement, withEntities = true) {\r\n  const lines: string[] = [];\r\n  const line: string[] = [];\r\n\r\n  const entities: MessageEntity[] = withEntities ? [] : undefined;\r\n  getRichElementValue(field, lines, line, undefined, undefined, entities);\r\n  if(line.length) {\r\n    lines.push(line.join(''));\r\n  }\r\n\r\n  let value = lines.join('\\n');\r\n  value = value.replace(/\\u00A0/g, ' ');\r\n\r\n  if(entities) {\r\n    RichTextProcessor.combineSameEntities(entities);\r\n  }\r\n\r\n  //console.log('getRichValue:', value, entities);\r\n\r\n  return {value, entities};\r\n}\r\n\r\nMOUNT_CLASS_TO.getRichValue = getRichValue;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport type { AccountPassword, AccountUpdatePasswordSettings, InputCheckPasswordSRP, PasswordKdfAlgo } from '../../layer';\r\nimport { MOUNT_CLASS_TO } from '../../config/debug';\r\nimport appUsersManager from '../appManagers/appUsersManager';\r\nimport apiManager from './mtprotoworker';\r\n\r\nexport class PasswordManager {\r\n  public getState(): Promise<AccountPassword> {\r\n    return apiManager.invokeApi('account.getPassword').then((result) => {\r\n      return result;\r\n    });\r\n  }\r\n\r\n  public updateSettings(settings: {\r\n    hint?: string,\r\n    email?: string,\r\n    newPassword?: string,\r\n    currentPassword?: string\r\n  } = {}) {\r\n    //state = Object.assign({}, state);\r\n    //state.new_algo = Object.assign({}, state.new_algo);\r\n\r\n    return this.getState().then(state => {\r\n      let currentHashPromise: Promise<InputCheckPasswordSRP>;\r\n      let newHashPromise: Promise<Uint8Array>;\r\n      const params: AccountUpdatePasswordSettings = {\r\n        password: null,\r\n        new_settings: {\r\n          _: 'account.passwordInputSettings',\r\n          hint: settings.hint,\r\n          email: settings.email\r\n        }\r\n      };\r\n  \r\n      if(settings.currentPassword) {\r\n        currentHashPromise = apiManager.invokeCrypto('computeSRP', settings.currentPassword, state, false) as any;\r\n      } else {\r\n        currentHashPromise = Promise.resolve({\r\n          _: 'inputCheckPasswordEmpty'\r\n        });\r\n      }\r\n  \r\n      // * https://core.telegram.org/api/srp#setting-a-new-2fa-password, but still there is a mistake, TDesktop passes 'new_algo' everytime\r\n      const newAlgo = state.new_algo as PasswordKdfAlgo.passwordKdfAlgoSHA256SHA256PBKDF2HMACSHA512iter100000SHA256ModPow;\r\n      const salt1 = new Uint8Array(newAlgo.salt1.length + 32);\r\n      salt1.randomize();\r\n      salt1.set(newAlgo.salt1, 0);\r\n      newAlgo.salt1 = salt1;\r\n  \r\n      if(settings.newPassword) {\r\n        newHashPromise = apiManager.invokeCrypto('computeSRP', settings.newPassword, state, true) as any;\r\n      } else {\r\n        newHashPromise = Promise.resolve(new Uint8Array());\r\n      }\r\n  \r\n      return Promise.all([currentHashPromise, newHashPromise]).then((hashes) => {\r\n        params.password = hashes[0];\r\n        params.new_settings.new_algo = newAlgo;\r\n        params.new_settings.new_password_hash = hashes[1];\r\n  \r\n        return apiManager.invokeApi('account.updatePasswordSettings', params);\r\n      });\r\n    });\r\n  }\r\n\r\n  public check(password: string, state: AccountPassword, options: any = {}) {\r\n    return apiManager.invokeCrypto('computeSRP', password, state, false).then((inputCheckPassword) => {\r\n      //console.log('SRP', inputCheckPassword);\r\n      return apiManager.invokeApi('auth.checkPassword', {\r\n        password: inputCheckPassword as InputCheckPasswordSRP.inputCheckPasswordSRP\r\n      }, options).then(auth => {\r\n        if(auth._ === 'auth.authorization') {\r\n          appUsersManager.saveApiUser(auth.user);\r\n          apiManager.setUserAuth(auth.user.id);\r\n        }\r\n\r\n        return auth;\r\n      });\r\n    });\r\n  }\r\n\r\n  public confirmPasswordEmail(code: string) {\r\n    return apiManager.invokeApi('account.confirmPasswordEmail', {code});\r\n  }\r\n\r\n  public resendPasswordEmail() {\r\n    return apiManager.invokeApi('account.resendPasswordEmail');\r\n  }\r\n\r\n  public cancelPasswordEmail() {\r\n    return apiManager.invokeApi('account.cancelPasswordEmail');\r\n  }\r\n\r\n  /* public requestRecovery(options: any = {}) {\r\n    return apiManager.invokeApi('auth.requestPasswordRecovery', {}, options);\r\n  }\r\n\r\n  public recover(code: any, options: any = {}) {\r\n    return apiManager.invokeApi('auth.recoverPassword', {\r\n      code\r\n    }, options);\r\n  } */\r\n}\r\n\r\nconst passwordManager = new PasswordManager();\r\nMOUNT_CLASS_TO.passwordManager = passwordManager;\r\nexport default passwordManager;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MessageEntity } from \"../../layer\";\r\n\r\nexport type MarkdownType = 'bold' | 'italic' | 'underline' | 'strikethrough' | 'monospace' | 'link' | 'mentionName';\r\nexport type MarkdownTag = {\r\n  match: string,\r\n  entityName: 'messageEntityBold' | 'messageEntityUnderline' | 'messageEntityItalic' | 'messageEntityPre' | 'messageEntityStrike' | 'messageEntityTextUrl' | 'messageEntityMentionName';\r\n};\r\nexport const markdownTags: {[type in MarkdownType]: MarkdownTag} = {\r\n  bold: {\r\n    match: '[style*=\"font-weight\"], b',\r\n    entityName: 'messageEntityBold'\r\n  },\r\n  underline: {\r\n    match: '[style*=\"underline\"], u',\r\n    entityName: 'messageEntityUnderline'\r\n  },\r\n  italic: {\r\n    match: '[style*=\"italic\"], i',\r\n    entityName: 'messageEntityItalic'\r\n  },\r\n  monospace: {\r\n    match: '[style*=\"monospace\"], [face=\"monospace\"], pre',\r\n    entityName: 'messageEntityPre'\r\n  },\r\n  strikethrough: {\r\n    match: '[style*=\"line-through\"], strike',\r\n    entityName: 'messageEntityStrike'\r\n  },\r\n  link: {\r\n    match: 'A:not(.follow)',\r\n    entityName: 'messageEntityTextUrl'\r\n  },\r\n  mentionName: {\r\n    match: 'A.follow',\r\n    entityName: 'messageEntityMentionName'\r\n  }\r\n};\r\n\r\nexport default function getRichElementValue(node: HTMLElement, lines: string[], line: string[], selNode?: Node, selOffset?: number, entities?: MessageEntity[], offset = {offset: 0}) {\r\n  if(node.nodeType === 3) { // TEXT\r\n    const nodeValue = node.nodeValue;\r\n\r\n    if(selNode === node) {\r\n      line.push(nodeValue.substr(0, selOffset) + '\\x01' + nodeValue.substr(selOffset));\r\n    } else {\r\n      line.push(nodeValue);\r\n    }\r\n\r\n    if(entities && nodeValue.trim()) {\r\n      if(node.parentNode) {\r\n        const parentElement = node.parentElement;\r\n        \r\n        for(const type in markdownTags) {\r\n          const tag = markdownTags[type as MarkdownType];\r\n          const closest = parentElement.closest(tag.match + ', [contenteditable]');\r\n          if(closest && closest.getAttribute('contenteditable') === null) {\r\n            if(tag.entityName === 'messageEntityTextUrl') {\r\n              entities.push({\r\n                _: tag.entityName,\r\n                url: (parentElement as HTMLAnchorElement).href,\r\n                offset: offset.offset,\r\n                length: nodeValue.length\r\n              });\r\n            } else if(tag.entityName === 'messageEntityMentionName') {\r\n              entities.push({\r\n                _: tag.entityName,\r\n                offset: offset.offset,\r\n                length: nodeValue.length,\r\n                user_id: +parentElement.dataset.follow\r\n              });\r\n            } else {\r\n              entities.push({\r\n                _: tag.entityName as any,\r\n                offset: offset.offset,\r\n                length: nodeValue.length\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    offset.offset += nodeValue.length;\r\n\r\n    return;\r\n  }\r\n\r\n  if(node.nodeType !== 1) { // NON-ELEMENT\r\n    return;\r\n  }\r\n\r\n  const isSelected = (selNode === node);\r\n  const isBlock = node.tagName === 'DIV' || node.tagName === 'P';\r\n  if(isBlock && line.length || node.tagName === 'BR') {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n  } else if(node.tagName === 'IMG') {\r\n    const alt = (node as HTMLImageElement).alt;\r\n    if(alt) {\r\n      line.push(alt);\r\n      offset.offset += alt.length;\r\n    }\r\n  }\r\n\r\n  if(isSelected && !selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  let curChild = node.firstChild as HTMLElement;\r\n  while(curChild) {\r\n    getRichElementValue(curChild, lines, line, selNode, selOffset, entities, offset);\r\n    curChild = curChild.nextSibling as any;\r\n  }\r\n\r\n  if(isSelected && selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  if(isBlock && line.length) {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpAttribute(el: any, attribute: string): HTMLElement {\r\n  return el.closest(`[${attribute}]`);\r\n  /* if(el.getAttribute(attribute) !== null) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.getAttribute(attribute) !== null) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport getRichValue from \"./getRichValue\";\r\n\r\nexport default function isInputEmpty(element: HTMLElement) {\r\n  if(element.hasAttribute('contenteditable') || element.tagName !== 'INPUT') {\r\n    /* const value = element.innerText;\r\n\r\n    return !value.trim() && !serializeNodes(Array.from(element.childNodes)).trim(); */\r\n    return !getRichValue(element, false).value.trim();\r\n  } else {\r\n    return !(element as HTMLInputElement).value.trim();\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\nimport I18n from \"../lib/langPack\";\n\nlet sortedCountries: HelpCountry[];\ntype PrefixCountry = {country: HelpCountry, code: HelpCountryCode};\nconst prefixes: Map<string, PrefixCountry> = new Map();\nlet maxPrefixLength = 0;\nconst setPrefix = (country: HelpCountry, code: HelpCountryCode, prefix: string = '') => {\n  prefix = code.country_code + prefix;\n  /* if(prefixes.has(prefix)) {\n    console.error('asdasdasd', prefixes.get(prefix), country, code);\n  } */\n  maxPrefixLength = Math.max(maxPrefixLength, prefix.length);\n  prefixes.set(prefix, {country, code});\n};\n\nexport function formatPhoneNumber(originalStr: string): {\n  formatted: string,\n  country: HelpCountry,\n  code: HelpCountryCode,\n  leftPattern: string\n} {\n  if(!prefixes.size) {\n    I18n.countriesList.forEach(country => {\n      country.country_codes.forEach(code => {\n        const s = {country, code};\n\n        if(code.prefixes) {\n          code.prefixes.forEach(prefix => {\n            setPrefix(country, code, prefix);\n          });\n        } else {\n          setPrefix(country, code);\n        }\n      });\n    });\n  }\n\n  // return {formatted: originalStr, country: undefined as any, leftPattern: ''};\n  let str = originalStr.replace(/\\D/g, '');\n  let phoneCode = str.slice(0, maxPrefixLength);\n  \n  ////console.log('str', str, phoneCode);\n  // if(!sortedCountries) {\n  //   sortedCountries = I18n.countriesList.slice().sort((a, b) => b.country_codes[0].country_code.length - a.country_codes[0].country_code.length);\n  // }\n  \n  // let country = sortedCountries.find((c) => {\n  //   return c.country_codes.find((c) => phoneCode.indexOf(c.replace(/\\D/g, '')) === 0);\n  // });\n\n  let prefixCountry: PrefixCountry;\n  for(let i = phoneCode.length - 1; i >= 0; --i) { // lookup for country by prefix\n    prefixCountry = prefixes.get(phoneCode.slice(0, i + 1));\n    if(prefixCountry) {\n      break;\n    }\n  }\n\n  if(!prefixCountry) {\n    return {\n      formatted: str, \n      country: undefined, \n      code: undefined, \n      leftPattern: ''\n    };\n  }\n\n  // country = /* PhoneCodesMain[country.phoneCode] ||  */country;\n  const country = prefixCountry.country;\n  \n  const patterns = prefixCountry.code.patterns || [];\n  const searchForPattern = str.slice(prefixCountry.code.country_code.length); // splice country code\n  let pattern = '', mostMatchedPatternMatches = 0, mostMatchedPattern = '';\n  for(let i = patterns.length - 1; i >= 0; --i) {\n    pattern = patterns[i];\n\n    const _pattern = pattern.replace(/ /g, '');\n    let patternMatches = 0;\n    for(let k = 0, length = Math.min(searchForPattern.length, _pattern.length); k < length; ++k) {\n      if(searchForPattern[k] === _pattern[k] || _pattern[k] === 'X') {\n        ++patternMatches;\n      } else {\n        patternMatches = 0;\n        break;\n      }\n    }\n\n    if(patternMatches > mostMatchedPatternMatches) {\n      mostMatchedPatternMatches = patternMatches;\n      mostMatchedPattern = pattern;\n    }\n  }\n\n  pattern = mostMatchedPattern || pattern;\n  pattern = pattern.replace(/\\d/g, 'X');\n\n  pattern = prefixCountry.code.country_code + ' ' + pattern;\n  // let pattern = country.pattern || country.phoneCode;\n  pattern.split('').forEach((symbol, idx) => {\n    if(symbol === ' ' && str[idx] !== ' ' && str.length > idx) {\n      str = str.slice(0, idx) + ' ' + str.slice(idx);\n    }\n  });\n  \n  /* if(country.pattern) {\n    str = str.slice(0, country.pattern.length);\n  } */\n\n  let leftPattern = pattern && pattern.length > str.length ? pattern.slice(str.length) : '';\n  if(leftPattern) {\n    /* const length = str.length;\n    leftPattern = leftPattern.split('').map((_, idx) => (length + idx).toString().slice(-1)).join(''); */\n    leftPattern = leftPattern.replace(/X/g, '‒');\n    // leftPattern = leftPattern.replace(/X/g, '0');\n  }\n  \n  return {formatted: str, country, code: prefixCountry.code, leftPattern};\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\nimport InputField, { InputFieldOptions } from \"./inputField\";\r\n\r\nexport default class PasswordInputField extends InputField {\r\n  public passwordVisible = false;\r\n  public toggleVisible: HTMLElement;\r\n  public onVisibilityClickAdditional: () => void;\r\n\r\n  constructor(options: InputFieldOptions = {}) {\r\n    super({\r\n      plainText: true,\r\n      ...options\r\n    });\r\n\r\n    const input = this.input as HTMLInputElement;\r\n    input.type = 'password';\r\n    input.setAttribute('required', '');\r\n    input.autocomplete = 'off';\r\n    /* input.readOnly = true;\r\n\r\n    input.addEventListener('focus', () => {\r\n      input.removeAttribute('readonly');\r\n    }, {once: true}); */\r\n\r\n    // * https://stackoverflow.com/a/35949954/6758968\r\n    const stealthy = document.createElement('input');\r\n    stealthy.classList.add('stealthy');\r\n    stealthy.tabIndex = -1;\r\n    stealthy.type = 'password';\r\n    input.parentElement.prepend(stealthy);\r\n    input.parentElement.insertBefore(stealthy.cloneNode(), input.nextSibling);\r\n\r\n    const toggleVisible = this.toggleVisible = document.createElement('span');\r\n    toggleVisible.classList.add('toggle-visible', 'tgico');\r\n\r\n    this.container.classList.add('input-field-password');\r\n    this.container.append(toggleVisible);\r\n\r\n    toggleVisible.addEventListener('click', this.onVisibilityClick);\r\n    toggleVisible.addEventListener('touchend', this.onVisibilityClick);\r\n  }\r\n\r\n  public onVisibilityClick = (e: Event) => {\r\n    cancelEvent(e);\r\n    this.passwordVisible = !this.passwordVisible;\r\n\r\n    this.toggleVisible.classList.toggle('eye-hidden', this.passwordVisible);\r\n    (this.input as HTMLInputElement).type = this.passwordVisible ? 'text' : 'password';\r\n    this.onVisibilityClickAdditional && this.onVisibilityClickAdditional();\r\n  };\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport lottieLoader, { RLottiePlayer } from \"../../lib/lottieLoader\";\r\nimport PasswordInputField from \"../passwordInputField\";\r\n\r\nexport default class PasswordMonkey {\r\n  public container: HTMLElement;\r\n  public animation: RLottiePlayer;\r\n  public needFrame = 0;\r\n  protected loadPromise: Promise<void>;\r\n\r\n  constructor(protected passwordInputField: PasswordInputField, protected size: number) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('media-sticker-wrapper');\r\n  }\r\n\r\n  public load() {\r\n    if(this.loadPromise) return this.loadPromise;\r\n    return this.loadPromise = lottieLoader.loadAnimationFromURL({\r\n      container: this.container,\r\n      loop: false,\r\n      autoplay: false,\r\n      width: this.size,\r\n      height: this.size,\r\n      noCache: true\r\n    //}, 'assets/img/TwoFactorSetupMonkeyClose.tgs').then(_animation => {\r\n    }, 'assets/img/TwoFactorSetupMonkeyPeek.tgs').then(_animation => {\r\n      //return;\r\n      this.animation = _animation;\r\n      this.animation.addEventListener('enterFrame', currentFrame => {\r\n        //console.log('enterFrame', currentFrame, this.needFrame);\r\n\r\n        if((this.animation.direction === 1 && currentFrame >= this.needFrame) ||\r\n          (this.animation.direction === -1 && currentFrame <= this.needFrame)) {\r\n            this.animation.setSpeed(1);\r\n            this.animation.pause();\r\n        } \r\n      });\r\n\r\n      this.passwordInputField.onVisibilityClickAdditional = () => {\r\n        if(this.passwordInputField.passwordVisible) {\r\n          this.animation.setDirection(1);\r\n          this.animation.curFrame = 0;\r\n          this.needFrame = 16;\r\n          this.animation.play();\r\n        } else {\r\n          this.animation.setDirection(-1);\r\n          this.animation.curFrame = 16;\r\n          this.needFrame = 0;\r\n          this.animation.play();\r\n        }\r\n      };\r\n\r\n      return lottieLoader.waitForFirstFrame(_animation);\r\n    });\r\n  }\r\n\r\n  public remove() {\r\n    if(this.animation) {\r\n      this.animation.remove();\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { LangPackKey, i18n } from \"../lib/langPack\";\r\n\r\nexport default class LoginPage {\r\n  public element: HTMLElement;\r\n  public container: HTMLElement;\r\n  public imageDiv: HTMLElement;\r\n  public inputWrapper: HTMLElement;\r\n  public title: HTMLElement;\r\n  public subtitle: HTMLParagraphElement;\r\n\r\n  constructor(options: {\r\n    className: string,\r\n    withInputWrapper?: boolean,\r\n    titleLangKey?: LangPackKey,\r\n    subtitleLangKey?: LangPackKey,\r\n  }) {\r\n    this.element = document.body.querySelector('.' + options.className) as HTMLDivElement;\r\n    //this.element = document.createElement('div');\r\n    //this.element.className = 'page-' + options.className;\r\n\r\n    this.container = document.createElement('div');\r\n    this.container.className = 'container center-align';\r\n\r\n    this.imageDiv = document.createElement('div');\r\n    this.imageDiv.className = 'auth-image';\r\n\r\n    this.title = document.createElement('h4');\r\n    if(options.titleLangKey) {\r\n      this.title.append(i18n(options.titleLangKey));\r\n    }\r\n\r\n    this.subtitle = document.createElement('p');\r\n    this.subtitle.className = 'subtitle';\r\n    if(options.subtitleLangKey) {\r\n      this.subtitle.append(i18n(options.subtitleLangKey));\r\n    }\r\n    \r\n    this.container.append(this.imageDiv, this.title, this.subtitle);\r\n\r\n    if(options.withInputWrapper) {\r\n      this.inputWrapper = document.createElement('div');\r\n      this.inputWrapper.className = 'input-wrapper';\r\n      this.container.append(this.inputWrapper);\r\n    }\r\n\r\n    this.element.append(this.container);\r\n  }\r\n}\r\n"],"sourceRoot":""}