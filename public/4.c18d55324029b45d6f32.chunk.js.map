{"version":3,"sources":["webpack:///./src/lib/filemanager.ts","webpack:///./src/lib/cacheStorage.ts","webpack:///./src/components/telInputField.ts","webpack:///./src/helpers/dom/replaceContent.ts","webpack:///./src/components/inputField.ts","webpack:///./src/components/scrollable.ts","webpack:///./src/components/checkboxField.ts","webpack:///./src/helpers/dom/toggleDisability.ts","webpack:///./src/helpers/dom/findUpTag.ts","webpack:///./src/helpers/dom/getRichValue.ts","webpack:///./src/helpers/dom/getRichElementValue.ts","webpack:///./src/helpers/dom/findUpAttribute.ts","webpack:///./src/helpers/dom/isInputEmpty.ts","webpack:///./src/helpers/formatPhoneNumber.ts","webpack:///./src/helpers/dom/placeCaretAtEnd.ts"],"names":["blobSupported","e","this","fileWriter","bytes","Blob","then","arr","write","mimeType","saveFileCallback","blobParts","part","push","truncate","length","finalize","saveToStorage","blob","dbName","useStorage","test","STORAGES","openDatabase","openDbPromise","caches","open","entryName","timeoutOperation","cache","delete","match","response","put","fileName","method","get","Response","headers","size","save","callback","Promise","resolve","reject","rejected","timeout","setTimeout","undefined","res","err","clearTimeout","fakeWriter","getFakeFileWriter","saveFile","catch","enabled","all","map","storage","deleteAll","TelInputField","options","super","label","name","pasted","lastValue","container","classList","add","telEl","input","HTMLInputElement","type","autocomplete","inputMode","pixelRatio","window","devicePixelRatio","letterSpacing","style","setProperty","originalFunc","setValueSilently","bind","value","addEventListener","remove","formattedPhoneNumber","Math","abs","setLabel","formatted","country","countryCode","leftPattern","replace","code","dataset","onInput","key","metaKey","ctrlKey","shiftKey","preventDefault","replaceContent","elem","node","innerHTML","firstChild","lastChild","replaceWith","textContent","append","init","document","target","text","originalEvent","clipboardData","getData","entities","parseEntities","filter","_","wrapRichText","noLinks","wrappingDraft","execCommand","InputState","createElement","required","validate","maxLength","showLengthOn","min","round","placeholder","plainText","processInput","labelText","firstElementChild","observer","MutationObserver","inputFake","onFakeInput","observe","characterData","childList","subtree","animate","wasInputFakeClientHeight","setAttribute","className","border","labelEl","lastElementChild","showingLength","wasError","contains","inputLength","diff","isError","toggle","select","labelOptions","scrollHeight","clientHeight","height","fireFakeInput","originalValue","isChanged","silent","wrapDraftText","state","Error","Valid","setState","ScrollableBase","el","logPrefix","onScrollMeasure","isHeavyAnimationInProgress","needCheckAfterAnimation","log","Array","from","children","forEach","c","onScroll","passive","capture","cancelAnimationFrame","element","position","margin","maxDistance","forceDirection","forceDuration","axis","Scrollable","onScrollOffset","withPaddingContainer","onAdditionalScroll","onScrolledTop","onScrolledBottom","lastScrollTop","lastScrollDirection","loadedAll","top","bottom","splitUp","requestAnimationFrame","scrollTop","checkForTriggers","maxScrollTop","setListeners","elements","padding","prepend","offsetHeight","getDistanceToEnd","y","ScrollableX","splitCount","scrollHorizontally","deltaX","scrollWidth","clientWidth","scrollLeft","deltaY","CheckboxField","restriction","disabled","toggleDisability","span","id","checked","stateKey","getState","stateValue","stateValues","indexOf","setByKey","textArgs","box","checkSvg","createElementNS","setAttributeNS","use","bg","withRipple","withHover","event","Event","bubbles","cancelable","dispatchEvent","disable","removeAttribute","findUpTag","tag","closest","getRichValue","field","withEntities","lines","line","join","combineSameEntities","markdownTags","bold","entityName","underline","italic","monospace","strikethrough","link","mentionName","getRichElementValue","selNode","selOffset","offset","nodeType","nodeValue","substr","trim","parentNode","parentElement","getAttribute","url","href","user_id","follow","isSelected","isBlock","tagName","splice","alt","curChild","nextSibling","findUpAttribute","attribute","isInputEmpty","hasAttribute","prefixes","Map","maxPrefixLength","setPrefix","prefix","country_code","max","set","formatPhoneNumber","originalStr","countriesList","country_codes","prefixCountry","str","phoneCode","slice","i","patterns","searchForPattern","pattern","mostMatchedPatternMatches","mostMatchedPattern","_pattern","patternMatches","k","split","symbol","idx","placeCaretAtEnd","ignoreTouchCheck","activeElement","focus","getSelection","createRange","range","selectNodeContents","collapse","sel","removeAllRanges","addRange","body","createTextRange","textRange","moveToElementText"],"mappings":"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","file":"4.c18d55324029b45d6f32.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { blobConstruct, readBlobAsUint8Array } from \"../helpers/blob\";\r\n\r\nexport class FileManager {\r\n  public blobSupported = true;\r\n  \r\n  constructor() {\r\n    try {\r\n      blobConstruct([], '');\r\n    } catch(e) {\r\n      this.blobSupported = false;\r\n    }\r\n  }\r\n  \r\n  public isAvailable() {\r\n    return this.blobSupported;\r\n  }\r\n  \r\n  public write(fileWriter: ReturnType<FileManager['getFakeFileWriter']>, bytes: Uint8Array | Blob | string): Promise<void> {\r\n    if(bytes instanceof Blob) { // is file bytes\r\n      return readBlobAsUint8Array(bytes).then(arr => {\r\n        return fileWriter.write(arr);\r\n      });\r\n    } else {\r\n      return fileWriter.write(bytes);\r\n    }\r\n  }\r\n\r\n  public getFakeFileWriter(mimeType: string, saveFileCallback?: (blob: Blob) => Promise<Blob>) {\r\n    const blobParts: Array<Uint8Array | string> = [];\r\n    const fakeFileWriter = {\r\n      write: async(part: Uint8Array | string) => {\r\n        if(!this.blobSupported) {\r\n          throw false;\r\n        }\r\n        \r\n        blobParts.push(part);\r\n      },\r\n      truncate: () => {\r\n        blobParts.length = 0;\r\n      },\r\n      finalize: (saveToStorage = true) => {\r\n        const blob = blobConstruct(blobParts, mimeType);\r\n\r\n        if(saveToStorage && saveFileCallback) {\r\n          saveFileCallback(blob);\r\n        }\r\n        \r\n        return blob;\r\n      }\r\n    };\r\n    \r\n    return fakeFileWriter;\r\n  }\r\n}\r\n\r\nexport default new FileManager();\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport Modes from '../config/modes';\r\nimport { blobConstruct } from '../helpers/blob';\r\nimport FileManager from './filemanager';\r\n//import { MOUNT_CLASS_TO } from './mtproto/mtproto_config';\r\n//import { logger } from './polyfill';\r\n\r\nexport type CacheStorageDbName = 'cachedFiles' | 'cachedStreamChunks' | 'cachedAssets';\r\n\r\nexport default class CacheStorageController {\r\n  private static STORAGES: CacheStorageController[] = [];\r\n  private openDbPromise: Promise<Cache>;\r\n\r\n  private useStorage = true;\r\n\r\n  //private log: ReturnType<typeof logger> = logger('CS');\r\n\r\n  constructor(private dbName: CacheStorageDbName) {\r\n    if(Modes.test) {\r\n      this.dbName += '_test';\r\n    }\r\n\r\n    if(CacheStorageController.STORAGES.length) {\r\n      this.useStorage = CacheStorageController.STORAGES[0].useStorage;\r\n    }\r\n    \r\n    this.openDatabase();\r\n    CacheStorageController.STORAGES.push(this);\r\n  }\r\n\r\n  private openDatabase(): Promise<Cache> {\r\n    return this.openDbPromise ?? (this.openDbPromise = caches.open(this.dbName));\r\n  }\r\n\r\n  public delete(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.delete('/' + entryName));\r\n  }\r\n\r\n  public deleteAll() {\r\n    return caches.delete(this.dbName);\r\n  }\r\n\r\n  public get(entryName: string) {\r\n    return this.timeoutOperation((cache) => cache.match('/' + entryName));\r\n  }\r\n\r\n  public save(entryName: string, response: Response) {\r\n    // return new Promise((resolve) => {}); // DEBUG\r\n    return this.timeoutOperation((cache) => cache.put('/' + entryName, response));\r\n  }\r\n\r\n  public getFile(fileName: string, method: 'blob' | 'json' | 'text' = 'blob'): Promise<any> {\r\n    /* if(method === 'blob') {\r\n      return Promise.reject();\r\n    } */\r\n\r\n    // const str = `get fileName: ${fileName}`;\r\n    // console.time(str);\r\n    return this.get(fileName).then((response) => {\r\n      if(!response) {\r\n        //console.warn('getFile:', response, fileName);\r\n        throw 'NO_ENTRY_FOUND';\r\n      }\r\n\r\n      const promise = response[method]();\r\n      // promise.then(() => {\r\n      //   console.timeEnd(str);\r\n      // });\r\n      return promise;\r\n    });\r\n  }\r\n\r\n  public saveFile(fileName: string, blob: Blob | Uint8Array) {\r\n    //return Promise.resolve(blobConstruct([blob]));\r\n    if(!(blob instanceof Blob)) {\r\n      blob = blobConstruct(blob) as Blob;\r\n    }\r\n\r\n    const response = new Response(blob, {\r\n      headers: {\r\n        'Content-Length': '' + blob.size\r\n      }\r\n    });\r\n    \r\n    return this.save(fileName, response).then(() => blob as Blob);\r\n  }\r\n\r\n  public timeoutOperation<T>(callback: (cache: Cache) => Promise<T>) {\r\n    if(!this.useStorage) {\r\n      return Promise.reject('STORAGE_OFFLINE');\r\n    }\r\n\r\n    return new Promise<T>(async(resolve, reject) => {\r\n      let rejected = false;\r\n      const timeout = setTimeout(() => {\r\n        reject();\r\n        //console.warn('CACHESTORAGE TIMEOUT');\r\n        rejected = true;\r\n      }, 15e3);\r\n\r\n      try {\r\n        const cache = await this.openDatabase();\r\n        if(!cache) {\r\n          this.useStorage = false;\r\n          this.openDbPromise = undefined;\r\n          throw 'no cache?';\r\n        }\r\n\r\n        const res = await callback(cache);\r\n\r\n        if(rejected) return;\r\n        resolve(res);\r\n      } catch(err) {\r\n        reject(err);\r\n      }\r\n\r\n      clearTimeout(timeout);\r\n    });\r\n  }\r\n\r\n  public getFileWriter(fileName: string, mimeType: string) {\r\n    const fakeWriter = FileManager.getFakeFileWriter(mimeType, (blob) => {\r\n      return this.saveFile(fileName, blob).catch(() => blob);\r\n    });\r\n\r\n    return Promise.resolve(fakeWriter);\r\n  }\r\n\r\n  public static toggleStorage(enabled: boolean) {\r\n    return Promise.all(this.STORAGES.map(storage => {\r\n      storage.useStorage = enabled;\r\n      \r\n      if(!enabled) {\r\n        return storage.deleteAll();\r\n      }\r\n    }));\r\n  }\r\n}\r\n\r\n//const cacheStorage = new CacheStorageController(); \r\n//MOUNT_CLASS_TO.cacheStorage = cacheStorage;\r\n//export default cacheStorage;\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport placeCaretAtEnd from \"../helpers/dom/placeCaretAtEnd\";\nimport { formatPhoneNumber } from \"../helpers/formatPhoneNumber\";\nimport { isApple, isAndroid, isAppleMobile } from \"../helpers/userAgent\";\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\nimport InputField, { InputFieldOptions } from \"./inputField\";\n\nexport default class TelInputField extends InputField {\n  private pasted = false;\n  public lastValue = '';\n  \n  constructor(options: InputFieldOptions & {\n    onInput?: (formatted: ReturnType<typeof formatPhoneNumber>) => void\n  } = {}) {\n    super({\n      label: 'Contacts.PhoneNumber.Placeholder',\n      //plainText: true,\n      name: 'phone',\n      ...options\n    });\n\n    this.container.classList.add('input-field-phone');\n\n    let telEl = this.input;\n    if(telEl instanceof HTMLInputElement) {\n      telEl.type = 'tel';\n      telEl.autocomplete = 'rr55RandomRR55';\n    } else {\n      telEl.inputMode = 'decimal';\n\n      const pixelRatio = window.devicePixelRatio;\n      if(pixelRatio > 1) {\n        let letterSpacing: number;\n        if(isApple) {\n          letterSpacing = pixelRatio * -.16;\n        } else if(isAndroid) {\n          letterSpacing = 0;\n        }\n\n        telEl.style.setProperty('--letter-spacing', letterSpacing + 'px');\n      }\n\n      const originalFunc = this.setValueSilently.bind(this);\n      this.setValueSilently = (value) => {\n        originalFunc(value);\n        placeCaretAtEnd(this.input, true);\n      };\n    }\n\n    telEl.addEventListener('input', () => {\n      //console.log('input', this.value);\n      telEl.classList.remove('error');\n  \n      const value = this.value;\n      const diff = Math.abs(value.length - this.lastValue.length);\n      if(diff > 1 && !this.pasted && isAppleMobile) {\n        this.setValueSilently(this.lastValue + value);\n      }\n  \n      this.pasted = false;\n  \n      this.setLabel();\n  \n      let formattedPhoneNumber: ReturnType<typeof formatPhoneNumber>;\n      let formatted: string, country: HelpCountry, countryCode: HelpCountryCode, leftPattern = '';\n      if(this.value.replace(/\\++/, '+') === '+') {\n        this.setValueSilently('+');\n      } else {\n        formattedPhoneNumber = formatPhoneNumber(this.value);\n        formatted = formattedPhoneNumber.formatted;\n        country = formattedPhoneNumber.country;\n        leftPattern = formattedPhoneNumber.leftPattern;\n        countryCode = formattedPhoneNumber.code;\n        this.setValueSilently(this.lastValue = formatted ? '+' + formatted : '');\n      }\n  \n      telEl.dataset.leftPattern = leftPattern/* .replace(/X/g, '0') */;\n  \n      //console.log(formatted, country);\n\n      options.onInput && options.onInput(formattedPhoneNumber);\n    });\n  \n    telEl.addEventListener('paste', () => {\n      this.pasted = true;\n      //console.log('paste', telEl.value);\n    });\n  \n    /* telEl.addEventListener('change', (e) => {\n      console.log('change', telEl.value);\n    }); */\n  \n    telEl.addEventListener('keypress', (e) => {\n      //console.log('keypress', this.value);\n      if(/\\D/.test(e.key) && !(e.metaKey || e.ctrlKey) && e.key !== 'Backspace' && !(e.key === '+' && e.shiftKey/*  && !this.value */)) {\n        e.preventDefault();\n        return false;\n      }\n    });\n  \n    /* telEl.addEventListener('focus', function(this: typeof telEl, e) {\n      this.removeAttribute('readonly'); // fix autocomplete\n    });*/\n  }\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function replaceContent(elem: HTMLElement, node: string | Node) {\r\n  if(typeof(node) === 'string') {\r\n    elem.innerHTML = node;\r\n    return;\r\n  }\r\n\r\n  // * children.length doesn't count text nodes\r\n  const firstChild = elem.firstChild;\r\n  if(firstChild) {\r\n    if(elem.lastChild === firstChild) {\r\n      firstChild.replaceWith(node);\r\n    } else {\r\n      elem.textContent = '';\r\n      elem.append(node);\r\n    }\r\n  } else {\r\n    elem.append(node);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport simulateEvent from \"../helpers/dom/dispatchEvent\";\r\nimport findUpAttribute from \"../helpers/dom/findUpAttribute\";\r\nimport getRichValue from \"../helpers/dom/getRichValue\";\r\nimport isInputEmpty from \"../helpers/dom/isInputEmpty\";\r\nimport { i18n, LangPackKey, _i18n } from \"../lib/langPack\";\r\nimport RichTextProcessor from \"../lib/richtextprocessor\";\r\n\r\nlet init = () => {\r\n  document.addEventListener('paste', (e) => {\r\n    if(!findUpAttribute(e.target, 'contenteditable=\"true\"')) {\r\n      return;\r\n    }\r\n    //console.log('document paste');\r\n\r\n    //console.log('messageInput paste');\r\n\r\n    e.preventDefault();\r\n    // @ts-ignore\r\n    let text = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n\r\n    let entities = RichTextProcessor.parseEntities(text);\r\n    //console.log('messageInput paste', text, entities);\r\n    entities = entities.filter(e => e._ === 'messageEntityEmoji' || e._ === 'messageEntityLinebreak');\r\n    //text = RichTextProcessor.wrapEmojiText(text);\r\n    text = RichTextProcessor.wrapRichText(text, {entities, noLinks: true, wrappingDraft: true});\r\n\r\n    // console.log('messageInput paste after', text);\r\n\r\n    // @ts-ignore\r\n    //let html = (e.originalEvent || e).clipboardData.getData('text/html');\r\n\r\n    // @ts-ignore\r\n    //console.log('paste text', text, );\r\n    window.document.execCommand('insertHTML', false, text);\r\n  });\r\n\r\n  init = null;\r\n};\r\n\r\n// ! it doesn't respect symbols other than strongs\r\n/* const checkAndSetRTL = (input: HTMLElement) => {\r\n  //const isEmpty = isInputEmpty(input);\r\n  //console.log('input', isEmpty);\r\n\r\n  //const char = [...getRichValue(input)][0];\r\n  const char = (input instanceof HTMLInputElement ? input.value : input.innerText)[0];\r\n  let direction = 'ltr';\r\n  if(char && checkRTL(char)) {\r\n    direction = 'rtl';\r\n  }\r\n\r\n  //console.log('RTL', direction, char);\r\n\r\n  input.style.direction = direction;\r\n}; */\r\n\r\nexport enum InputState {\r\n  Neutral = 0,\r\n  Valid = 1,\r\n  Error = 2\r\n};\r\n\r\nexport type InputFieldOptions = {\r\n  placeholder?: LangPackKey, \r\n  label?: LangPackKey, \r\n  labelOptions?: any[],\r\n  labelText?: string,\r\n  name?: string, \r\n  maxLength?: number, \r\n  showLengthOn?: number,\r\n  plainText?: true,\r\n  animate?: true,\r\n  required?: boolean,\r\n  validate?: () => boolean\r\n};\r\n\r\nclass InputField {\r\n  public container: HTMLElement;\r\n  public input: HTMLElement;\r\n  public inputFake: HTMLElement;\r\n  public label: HTMLLabelElement;\r\n\r\n  public originalValue: string;\r\n\r\n  public required: boolean;\r\n  public validate: () => boolean;\r\n\r\n  //public onLengthChange: (length: number, isOverflow: boolean) => void;\r\n  protected wasInputFakeClientHeight: number;\r\n  // protected showScrollDebounced: () => void;\r\n\r\n  constructor(public options: InputFieldOptions = {}) {\r\n    this.container = document.createElement('div');\r\n    this.container.classList.add('input-field');\r\n\r\n    this.required = options.required;\r\n    this.validate = options.validate;\r\n\r\n    if(options.maxLength) {\r\n      options.showLengthOn = Math.min(40, Math.round(options.maxLength / 3));\r\n    }\r\n\r\n    const {placeholder, maxLength, showLengthOn, name, plainText} = options;\r\n\r\n    let label = options.label || options.labelText;\r\n\r\n    let input: HTMLElement;\r\n    if(!plainText) {\r\n      if(init) {\r\n        init();\r\n      }\r\n\r\n      this.container.innerHTML = `\r\n      <div contenteditable=\"true\" class=\"input-field-input\"></div>\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      const observer = new MutationObserver(() => {\r\n        //checkAndSetRTL(input);\r\n\r\n        if(processInput) {\r\n          processInput();\r\n        }\r\n      });\r\n\r\n      // * because if delete all characters there will br left\r\n      input.addEventListener('input', () => {\r\n        if(isInputEmpty(input)) {\r\n          input.innerHTML = '';\r\n        }\r\n\r\n        if(this.inputFake) {\r\n          this.inputFake.innerHTML = input.innerHTML;\r\n          this.onFakeInput();\r\n        }\r\n      });\r\n      \r\n      // ! childList for paste first symbol\r\n      observer.observe(input, {characterData: true, childList: true, subtree: true});\r\n\r\n      if(options.animate) {\r\n        input.classList.add('scrollable', 'scrollable-y');\r\n        this.wasInputFakeClientHeight = 0;\r\n        // this.showScrollDebounced = debounce(() => this.input.classList.remove('no-scrollbar'), 150, false, true);\r\n        this.inputFake = document.createElement('div');\r\n        this.inputFake.setAttribute('contenteditable', 'true');\r\n        this.inputFake.className = input.className + ' input-field-input-fake';\r\n      }\r\n    } else {\r\n      this.container.innerHTML = `\r\n      <input type=\"text\" ${name ? `name=\"${name}\"` : ''} autocomplete=\"off\" ${label ? 'required=\"\"' : ''} class=\"input-field-input\">\r\n      `;\r\n\r\n      input = this.container.firstElementChild as HTMLElement;\r\n      //input.addEventListener('input', () => checkAndSetRTL(input));\r\n    }\r\n\r\n    input.setAttribute('dir', 'auto');\r\n\r\n    if(placeholder) {\r\n      _i18n(input, placeholder, undefined, 'placeholder');\r\n\r\n      if(this.inputFake) {\r\n        _i18n(this.inputFake, placeholder, undefined, 'placeholder');\r\n      }\r\n    }\r\n\r\n    if(label || placeholder) {\r\n      const border = document.createElement('div');\r\n      border.classList.add('input-field-border');\r\n      this.container.append(border);\r\n    }\r\n\r\n    if(label) {\r\n      this.label = document.createElement('label');\r\n      this.setLabel();\r\n      this.container.append(this.label);\r\n    }\r\n\r\n    let processInput: () => void;\r\n    if(maxLength) {\r\n      const labelEl = this.container.lastElementChild as HTMLLabelElement;\r\n      let showingLength = false;\r\n\r\n      processInput = () => {\r\n        const wasError = input.classList.contains('error');\r\n        // * https://stackoverflow.com/a/54369605 #2 to count emoji as 1 symbol\r\n        const inputLength = plainText ? (input as HTMLInputElement).value.length : [...getRichValue(input, false).value].length;\r\n        const diff = maxLength - inputLength;\r\n        const isError = diff < 0;\r\n        input.classList.toggle('error', isError);\r\n\r\n        //this.onLengthChange && this.onLengthChange(inputLength, isError);\r\n\r\n        if(isError || diff <= showLengthOn) {\r\n          this.setLabel();\r\n          labelEl.append(` (${maxLength - inputLength})`);\r\n          if(!showingLength) showingLength = true;\r\n        } else if((wasError && !isError) || showingLength) {\r\n          this.setLabel();\r\n          showingLength = false;\r\n        }\r\n      };\r\n\r\n      input.addEventListener('input', processInput);\r\n    }\r\n\r\n    this.input = input;\r\n  }\r\n\r\n  public select() {\r\n    if((this.input as HTMLInputElement).value) { // * avoid selecting whole empty field on iOS devices\r\n      (this.input as HTMLInputElement).select(); // * select text\r\n    }\r\n  }\r\n\r\n  public setLabel() {\r\n    this.label.textContent = '';\r\n    if(this.options.labelText) {\r\n      this.label.innerHTML = this.options.labelText;\r\n    } else {\r\n      this.label.append(i18n(this.options.label, this.options.labelOptions));\r\n    }\r\n  }\r\n\r\n  public onFakeInput() {\r\n    const {scrollHeight, clientHeight} = this.inputFake;\r\n    /* if(this.wasInputFakeClientHeight && this.wasInputFakeClientHeight !== clientHeight) {\r\n      this.input.classList.add('no-scrollbar'); // ! в сафари может вообще не появиться скролл после анимации, так как ему нужен полный reflow блока с overflow.\r\n      this.showScrollDebounced();\r\n    } */\r\n\r\n    this.wasInputFakeClientHeight = clientHeight;\r\n    this.input.style.height = scrollHeight ? scrollHeight + 'px' : '';\r\n  }\r\n\r\n  get value() {\r\n    return this.options.plainText ? (this.input as HTMLInputElement).value : getRichValue(this.input, false).value;\r\n    //return getRichValue(this.input);\r\n  }\r\n\r\n  set value(value: string) {\r\n    this.setValueSilently(value, false);\r\n\r\n    simulateEvent(this.input, 'input');\r\n  }\r\n\r\n  public setValueSilently(value: string, fireFakeInput = true) {\r\n    if(this.options.plainText) {\r\n      (this.input as HTMLInputElement).value = value;\r\n    } else {\r\n      this.input.innerHTML = value;\r\n      \r\n      if(this.inputFake) {\r\n        this.inputFake.innerHTML = value;\r\n\r\n        if(fireFakeInput) {\r\n          this.onFakeInput();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public isChanged() {\r\n    return this.value !== this.originalValue;\r\n  }\r\n\r\n  public isValid() {\r\n    return !this.input.classList.contains('error') && \r\n      this.isChanged() && \r\n      (!this.validate || this.validate()) && \r\n      (!this.required || !isInputEmpty(this.input));\r\n  }\r\n\r\n  public setOriginalValue(value: InputField['originalValue'] = '', silent = false) {\r\n    this.originalValue = value;\r\n\r\n    if(!this.options.plainText) {\r\n      value = RichTextProcessor.wrapDraftText(value);\r\n    }\r\n\r\n    if(silent) {\r\n      this.setValueSilently(value, false); \r\n    } else {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  public setState(state: InputState, label?: LangPackKey) {\r\n    if(label) {\r\n      this.label.textContent = '';\r\n      this.label.append(i18n(label, this.options.labelOptions));\r\n    }\r\n\r\n    this.input.classList.toggle('error', !!(state & InputState.Error));\r\n    this.input.classList.toggle('valid', !!(state & InputState.Valid));\r\n  }\r\n\r\n  public setError(label?: LangPackKey) {\r\n    this.setState(InputState.Error, label);\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport { isTouchSupported } from \"../helpers/touchSupport\";\r\nimport { logger, LogTypes } from \"../lib/logger\";\r\nimport fastSmoothScroll, { FocusDirection } from \"../helpers/fastSmoothScroll\";\r\nimport useHeavyAnimationCheck from \"../hooks/useHeavyAnimationCheck\";\r\nimport { cancelEvent } from \"../helpers/dom/cancelEvent\";\r\n/*\r\nvar el = $0;\r\nvar height = 0;\r\nvar checkUp = false;\r\n\r\ndo {\r\n  height += el.scrollHeight;\r\n} while(el = (checkUp ? el.previousElementSibling : el.nextElementSibling));\r\nconsole.log(height);\r\n*/\r\n\r\n/*\r\nArray.from($0.querySelectorAll('.bubble-content')).forEach(_el => {\r\n\t//_el.style.display = '';\t\r\n\t//return;\r\n\r\n\tlet el = _el.parentElement;\r\n\tlet height = el.scrollHeight;\r\n\tlet width = el.scrollWidth;\r\n\tel.style.width = width + 'px';\r\n\tel.style.height = height + 'px';\r\n\t_el.style.display = 'none';\r\n});\r\n*/\r\n\r\n/* const scrollables: Map<HTMLElement, Scrollable> = new Map();\r\nconst scrollsIntersector = new IntersectionObserver(entries => {\r\n  for(let entry of entries) {\r\n    const scrollable = scrollables.get(entry.target as HTMLElement);\r\n\r\n    if(entry.isIntersecting) {\r\n      scrollable.isVisible = true;\r\n    } else {\r\n      scrollable.isVisible = false;\r\n\r\n      if(!isInDOM(entry.target)) {\r\n        scrollsIntersector.unobserve(scrollable.container);\r\n        scrollables.delete(scrollable.container);\r\n      }\r\n    }\r\n  }\r\n}); */\r\n\r\nexport class ScrollableBase {\r\n  protected log: ReturnType<typeof logger>;\r\n\r\n  public onScrollMeasure: number = 0;\r\n  protected onScroll: () => void;\r\n\r\n  public isHeavyAnimationInProgress = false;\r\n  protected needCheckAfterAnimation = false;\r\n\r\n  constructor(public el: HTMLElement, logPrefix = '', public container: HTMLElement = document.createElement('div')) {\r\n    this.container.classList.add('scrollable');\r\n\r\n    this.log = logger('SCROLL' + (logPrefix ? '-' + logPrefix : ''), LogTypes.Error);\r\n\r\n    if(el) {\r\n      Array.from(el.children).forEach(c => this.container.append(c));\r\n\r\n      el.append(this.container);\r\n    }\r\n    //this.onScroll();\r\n  }\r\n\r\n  protected setListeners() {\r\n    window.addEventListener('resize', this.onScroll, {passive: true});\r\n    this.container.addEventListener('scroll', this.onScroll, {passive: true, capture: true});\r\n\r\n    useHeavyAnimationCheck(() => {\r\n      this.isHeavyAnimationInProgress = true;\r\n\r\n      if(this.onScrollMeasure) {\r\n        this.needCheckAfterAnimation = true;\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n    }, () => {\r\n      this.isHeavyAnimationInProgress = false;\r\n\r\n      if(this.needCheckAfterAnimation) {\r\n        this.onScroll();\r\n        this.needCheckAfterAnimation = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public append(element: HTMLElement) {\r\n    this.container.append(element);\r\n  }\r\n\r\n  public scrollIntoViewNew(\r\n    element: HTMLElement,\r\n    position: ScrollLogicalPosition,\r\n    margin?: number,\r\n    maxDistance?: number,\r\n    forceDirection?: FocusDirection,\r\n    forceDuration?: number,\r\n    axis?: 'x' | 'y'\r\n  ) {\r\n    //return Promise.resolve();\r\n    return fastSmoothScroll(this.container, element, position, margin, maxDistance, forceDirection, forceDuration, axis);\r\n  }\r\n}\r\n\r\nexport type SliceSides = 'top' | 'bottom';\r\nexport type SliceSidesContainer = {[k in SliceSides]: boolean};\r\n\r\nexport default class Scrollable extends ScrollableBase {\r\n  public splitUp: HTMLElement;\r\n  public padding: HTMLElement;\r\n  \r\n  public onAdditionalScroll: () => void = null;\r\n  public onScrolledTop: () => void = null;\r\n  public onScrolledBottom: () => void = null;\r\n  \r\n  public lastScrollTop: number = 0;\r\n  public lastScrollDirection: number = 0;\r\n\r\n  public loadedAll: SliceSidesContainer = {top: true, bottom: false};\r\n\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, withPaddingContainer?: boolean) {\r\n    super(el, logPrefix);\r\n\r\n    /* if(withPaddingContainer) {\r\n      this.padding = document.createElement('div');\r\n      this.padding.classList.add('scrollable-padding');\r\n      Array.from(this.container.children).forEach(c => this.padding.append(c));\r\n      this.container.append(this.padding);\r\n    } */\r\n\r\n    this.container.classList.add('scrollable-y');\r\n    this.setListeners();\r\n  }\r\n\r\n  public setVirtualContainer(el?: HTMLElement) {\r\n    this.splitUp = el;\r\n    this.log('setVirtualContainer:', el, this);\r\n  }\r\n\r\n  public onScroll = () => {\r\n    //if(this.debug) {\r\n      //this.log('onScroll call', this.onScrollMeasure);\r\n    //}\r\n\r\n    //return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      if(this.onScrollMeasure) {\r\n        window.cancelAnimationFrame(this.onScrollMeasure);\r\n      }\r\n\r\n      this.needCheckAfterAnimation = true;\r\n      return;\r\n    }\r\n\r\n    //if(this.onScrollMeasure || ((this.scrollLocked || (!this.onScrolledTop && !this.onScrolledBottom)) && !this.splitUp && !this.onAdditionalScroll)) return;\r\n    if((!this.onScrolledTop && !this.onScrolledBottom) && !this.splitUp && !this.onAdditionalScroll) return;\r\n    if(this.onScrollMeasure) window.cancelAnimationFrame(this.onScrollMeasure);\r\n    this.onScrollMeasure = window.requestAnimationFrame(() => {\r\n      this.onScrollMeasure = 0;\r\n\r\n      const scrollTop = this.container.scrollTop;\r\n      this.lastScrollDirection = this.lastScrollTop === scrollTop ? 0 : (this.lastScrollTop < scrollTop ? 1 : -1); // * 1 - bottom, -1 - top\r\n      this.lastScrollTop = scrollTop;\r\n\r\n      if(this.onAdditionalScroll && this.lastScrollDirection !== 0) {\r\n        this.onAdditionalScroll();\r\n      }\r\n      \r\n      if(this.checkForTriggers) {\r\n        this.checkForTriggers();\r\n      }\r\n    });\r\n  };\r\n\r\n  public checkForTriggers = () => {\r\n    if((!this.onScrolledTop && !this.onScrolledBottom)) return;\r\n\r\n    if(this.isHeavyAnimationInProgress) {\r\n      this.onScroll();\r\n      return;\r\n    }\r\n\r\n    const scrollHeight = this.container.scrollHeight;\r\n    if(!scrollHeight) { // незачем вызывать триггеры если блок пустой или не виден\r\n      return;\r\n    }\r\n\r\n    const clientHeight = this.container.clientHeight;\r\n    const maxScrollTop = scrollHeight - clientHeight;\r\n    const scrollTop = this.lastScrollTop;\r\n\r\n    //this.log('checkForTriggers:', scrollTop, maxScrollTop);\r\n\r\n    if(this.onScrolledTop && scrollTop <= this.onScrollOffset && this.lastScrollDirection <= 0/* && direction === -1 */) {\r\n      this.onScrolledTop();\r\n    }\r\n\r\n    if(this.onScrolledBottom && (maxScrollTop - scrollTop) <= this.onScrollOffset && this.lastScrollDirection >= 0/* && direction === 1 */) {\r\n      this.onScrolledBottom();\r\n    }\r\n  };\r\n\r\n  public prepend(...elements: (HTMLElement | DocumentFragment)[]) {\r\n    (this.splitUp || this.padding || this.container).prepend(...elements);\r\n  }\r\n\r\n  public append(...elements: (HTMLElement | DocumentFragment)[]) {\r\n    (this.splitUp || this.padding || this.container).append(...elements);\r\n  }\r\n\r\n  public getDistanceToEnd() {\r\n    return this.scrollHeight - Math.round(this.scrollTop + this.container.offsetHeight);\r\n  }\r\n\r\n  get isScrolledDown() {\r\n    return this.getDistanceToEnd() <= 1;\r\n  }\r\n\r\n  set scrollTop(y: number) {\r\n    this.container.scrollTop = y;\r\n  }\r\n  \r\n  get scrollTop() {\r\n    //this.log.trace('get scrollTop');\r\n    return this.container.scrollTop;\r\n  }\r\n  \r\n  get scrollHeight() {\r\n    return this.container.scrollHeight;\r\n  }\r\n}\r\n\r\nexport class ScrollableX extends ScrollableBase {\r\n  constructor(el: HTMLElement, logPrefix = '', public onScrollOffset = 300, public splitCount = 15, public container: HTMLElement = document.createElement('div')) {\r\n    super(el, logPrefix, container);\r\n\r\n    this.container.classList.add('scrollable-x');\r\n\r\n    if(!isTouchSupported) {\r\n      const scrollHorizontally = (e: any) => {\r\n        if(!e.deltaX && this.container.scrollWidth > this.container.clientWidth) {\r\n          this.container.scrollLeft += e.deltaY / 4;\r\n          cancelEvent(e);\r\n        }\r\n      };\r\n      \r\n      this.container.addEventListener('wheel', scrollHorizontally, {passive: false});\r\n    }\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport appStateManager from \"../lib/appManagers/appStateManager\";\r\nimport { getDeepProperty } from \"../helpers/object\";\r\nimport { ripple } from \"./ripple\";\r\nimport { LangPackKey, _i18n } from \"../lib/langPack\";\r\n\r\nexport type CheckboxFieldOptions = {\r\n  text?: LangPackKey,\r\n  textArgs?: any[],\r\n  name?: string, \r\n  round?: boolean, \r\n  toggle?: boolean,\r\n  stateKey?: string,\r\n  stateValues?: any[],\r\n  disabled?: boolean,\r\n  checked?: boolean,\r\n  restriction?: boolean,\r\n  withRipple?: boolean,\r\n  withHover?: boolean,\r\n};\r\nexport default class CheckboxField {\r\n  public input: HTMLInputElement;\r\n  public label: HTMLLabelElement;\r\n  public span: HTMLSpanElement;\r\n\r\n  constructor(options: CheckboxFieldOptions = {}) {\r\n    const label = this.label = document.createElement('label');\r\n    label.classList.add('checkbox-field');\r\n\r\n    if(options.restriction) {\r\n      label.classList.add('checkbox-field-restriction');\r\n    }\r\n\r\n    if(options.round) {\r\n      label.classList.add('checkbox-field-round');\r\n    }\r\n\r\n    if(options.disabled) {\r\n      this.toggleDisability(true);\r\n    }\r\n\r\n    const input = this.input = document.createElement('input');\r\n    input.type = 'checkbox';\r\n    if(options.name) {\r\n      input.id = 'input-' + options.name;\r\n    }\r\n\r\n    if(options.checked) {\r\n      input.checked = true;\r\n    }\r\n\r\n    if(options.stateKey) {\r\n      appStateManager.getState().then(state => {\r\n        const stateValue = getDeepProperty(state, options.stateKey);\r\n        let checked: boolean;\r\n        if(options.stateValues) {\r\n          checked = options.stateValues.indexOf(stateValue) === 1;\r\n        } else {\r\n          checked = stateValue;\r\n        }\r\n\r\n        this.setValueSilently(checked);\r\n\r\n        input.addEventListener('change', () => {\r\n          let value: any;\r\n          if(options.stateValues) {\r\n            value = options.stateValues[input.checked ? 1 : 0];\r\n          } else {\r\n            value = input.checked;\r\n          }\r\n\r\n          appStateManager.setByKey(options.stateKey, value);\r\n        });\r\n      });\r\n    }\r\n\r\n    let span: HTMLSpanElement;\r\n    if(options.text) {\r\n      span = this.span = document.createElement('span');\r\n      span.classList.add('checkbox-caption');\r\n      _i18n(span, options.text, options.textArgs);\r\n    } else {\r\n      label.classList.add('checkbox-without-caption');\r\n    }\r\n\r\n    label.append(input);\r\n\r\n    if(options.toggle) {\r\n      label.classList.add('checkbox-field-toggle');\r\n\r\n      const toggle = document.createElement('div');\r\n      toggle.classList.add('checkbox-toggle');\r\n      label.append(toggle);\r\n    } else {\r\n      const box = document.createElement('div');\r\n      box.classList.add('checkbox-box');\r\n  \r\n      const checkSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n      checkSvg.classList.add('checkbox-box-check');\r\n      checkSvg.setAttributeNS(null, 'viewBox', '0 0 24 24');\r\n      const use = document.createElementNS(\"http://www.w3.org/2000/svg\", \"use\");\r\n      use.setAttributeNS(null, 'href', '#check');\r\n      use.setAttributeNS(null, 'x', '-1');\r\n      checkSvg.append(use);\r\n  \r\n      const bg = document.createElement('div');\r\n      bg.classList.add('checkbox-box-background');\r\n  \r\n      const border = document.createElement('div');\r\n      border.classList.add('checkbox-box-border');\r\n  \r\n      box.append(border, bg, checkSvg);\r\n  \r\n      label.append(box);\r\n    }\r\n\r\n    if(span) {\r\n      label.append(span);\r\n    }\r\n\r\n    if(options.withRipple) {\r\n      label.classList.add('checkbox-ripple', 'hover-effect');\r\n      ripple(label, undefined, undefined, true);\r\n      //label.prepend(input);\r\n    } else if(options.withHover) {\r\n      label.classList.add('hover-effect');\r\n    }\r\n  }\r\n\r\n  get checked() {\r\n    return this.input.checked;\r\n  }\r\n\r\n  set checked(checked: boolean) {\r\n    /* if(this.checked === checked) {\r\n      return;\r\n    } */\r\n    \r\n    this.setValueSilently(checked);\r\n\r\n    const event = new Event('change', {bubbles: true, cancelable: true});\r\n    this.input.dispatchEvent(event);\r\n  }\r\n\r\n  public setValueSilently(checked: boolean) {\r\n    this.input.checked = checked;\r\n  }\r\n\r\n  public toggleDisability(disable: boolean) {\r\n    this.label.classList.toggle('checkbox-disabled', disable);\r\n    return () => this.toggleDisability(!disable);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function toggleDisability(elements: HTMLElement[], disable: boolean) {\r\n  if(disable) {\r\n    elements.forEach(el => el.setAttribute('disabled', 'true'));\r\n  } else {\r\n    elements.forEach(el => el.removeAttribute('disabled'));\r\n  }\r\n\r\n  return () => toggleDisability(elements, !disable);\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpTag(el: any, tag: string): HTMLElement {\r\n  return el.closest(tag);\r\n  /* if(el.tagName === tag) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.tagName === tag) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MOUNT_CLASS_TO } from \"../../config/debug\";\r\nimport { MessageEntity } from \"../../layer\";\r\nimport RichTextProcessor from \"../../lib/richtextprocessor\";\r\nimport getRichElementValue from \"./getRichElementValue\";\r\n\r\nexport default function getRichValue(field: HTMLElement, withEntities = true) {\r\n  const lines: string[] = [];\r\n  const line: string[] = [];\r\n\r\n  const entities: MessageEntity[] = withEntities ? [] : undefined;\r\n  getRichElementValue(field, lines, line, undefined, undefined, entities);\r\n  if(line.length) {\r\n    lines.push(line.join(''));\r\n  }\r\n\r\n  let value = lines.join('\\n');\r\n  value = value.replace(/\\u00A0/g, ' ');\r\n\r\n  if(entities) {\r\n    RichTextProcessor.combineSameEntities(entities);\r\n  }\r\n\r\n  //console.log('getRichValue:', value, entities);\r\n\r\n  return {value, entities};\r\n}\r\n\r\nMOUNT_CLASS_TO.getRichValue = getRichValue;\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { MessageEntity } from \"../../layer\";\r\n\r\nexport type MarkdownType = 'bold' | 'italic' | 'underline' | 'strikethrough' | 'monospace' | 'link' | 'mentionName';\r\nexport type MarkdownTag = {\r\n  match: string,\r\n  entityName: 'messageEntityBold' | 'messageEntityUnderline' | 'messageEntityItalic' | 'messageEntityPre' | 'messageEntityStrike' | 'messageEntityTextUrl' | 'messageEntityMentionName';\r\n};\r\nexport const markdownTags: {[type in MarkdownType]: MarkdownTag} = {\r\n  bold: {\r\n    match: '[style*=\"font-weight\"], b',\r\n    entityName: 'messageEntityBold'\r\n  },\r\n  underline: {\r\n    match: '[style*=\"underline\"], u',\r\n    entityName: 'messageEntityUnderline'\r\n  },\r\n  italic: {\r\n    match: '[style*=\"italic\"], i',\r\n    entityName: 'messageEntityItalic'\r\n  },\r\n  monospace: {\r\n    match: '[style*=\"monospace\"], [face=\"monospace\"], pre',\r\n    entityName: 'messageEntityPre'\r\n  },\r\n  strikethrough: {\r\n    match: '[style*=\"line-through\"], strike',\r\n    entityName: 'messageEntityStrike'\r\n  },\r\n  link: {\r\n    match: 'A:not(.follow)',\r\n    entityName: 'messageEntityTextUrl'\r\n  },\r\n  mentionName: {\r\n    match: 'A.follow',\r\n    entityName: 'messageEntityMentionName'\r\n  }\r\n};\r\n\r\nexport default function getRichElementValue(node: HTMLElement, lines: string[], line: string[], selNode?: Node, selOffset?: number, entities?: MessageEntity[], offset = {offset: 0}) {\r\n  if(node.nodeType === 3) { // TEXT\r\n    const nodeValue = node.nodeValue;\r\n\r\n    if(selNode === node) {\r\n      line.push(nodeValue.substr(0, selOffset) + '\\x01' + nodeValue.substr(selOffset));\r\n    } else {\r\n      line.push(nodeValue);\r\n    }\r\n\r\n    if(entities && nodeValue.trim()) {\r\n      if(node.parentNode) {\r\n        const parentElement = node.parentElement;\r\n        \r\n        for(const type in markdownTags) {\r\n          const tag = markdownTags[type as MarkdownType];\r\n          const closest = parentElement.closest(tag.match + ', [contenteditable]');\r\n          if(closest && closest.getAttribute('contenteditable') === null) {\r\n            if(tag.entityName === 'messageEntityTextUrl') {\r\n              entities.push({\r\n                _: tag.entityName,\r\n                url: (parentElement as HTMLAnchorElement).href,\r\n                offset: offset.offset,\r\n                length: nodeValue.length\r\n              });\r\n            } else if(tag.entityName === 'messageEntityMentionName') {\r\n              entities.push({\r\n                _: tag.entityName,\r\n                offset: offset.offset,\r\n                length: nodeValue.length,\r\n                user_id: +parentElement.dataset.follow\r\n              });\r\n            } else {\r\n              entities.push({\r\n                _: tag.entityName as any,\r\n                offset: offset.offset,\r\n                length: nodeValue.length\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    offset.offset += nodeValue.length;\r\n\r\n    return;\r\n  }\r\n\r\n  if(node.nodeType !== 1) { // NON-ELEMENT\r\n    return;\r\n  }\r\n\r\n  const isSelected = (selNode === node);\r\n  const isBlock = node.tagName === 'DIV' || node.tagName === 'P';\r\n  if(isBlock && line.length || node.tagName === 'BR') {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n  } else if(node.tagName === 'IMG') {\r\n    const alt = (node as HTMLImageElement).alt;\r\n    if(alt) {\r\n      line.push(alt);\r\n      offset.offset += alt.length;\r\n    }\r\n  }\r\n\r\n  if(isSelected && !selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  let curChild = node.firstChild as HTMLElement;\r\n  while(curChild) {\r\n    getRichElementValue(curChild, lines, line, selNode, selOffset, entities, offset);\r\n    curChild = curChild.nextSibling as any;\r\n  }\r\n\r\n  if(isSelected && selOffset) {\r\n    line.push('\\x01');\r\n  }\r\n\r\n  if(isBlock && line.length) {\r\n    lines.push(line.join(''));\r\n    line.splice(0, line.length);\r\n  }\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nexport default function findUpAttribute(el: any, attribute: string): HTMLElement {\r\n  return el.closest(`[${attribute}]`);\r\n  /* if(el.getAttribute(attribute) !== null) return el; // 03.02.2020\r\n\r\n  while(el.parentElement) {\r\n    el = el.parentElement;\r\n    if(el.getAttribute(attribute) !== null) \r\n      return el;\r\n  }\r\n  return null; */\r\n}\r\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nimport getRichValue from \"./getRichValue\";\r\n\r\nexport default function isInputEmpty(element: HTMLElement) {\r\n  if(element.hasAttribute('contenteditable') || element.tagName !== 'INPUT') {\r\n    /* const value = element.innerText;\r\n\r\n    return !value.trim() && !serializeNodes(Array.from(element.childNodes)).trim(); */\r\n    return !getRichValue(element, false).value.trim();\r\n  } else {\r\n    return !(element as HTMLInputElement).value.trim();\r\n  }\r\n}\r\n","/*\n * https://github.com/morethanwords/tweb\n * Copyright (C) 2019-2021 Eduard Kuzmenko\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\n */\n\nimport { HelpCountry, HelpCountryCode } from \"../layer\";\nimport I18n from \"../lib/langPack\";\n\nlet sortedCountries: HelpCountry[];\ntype PrefixCountry = {country: HelpCountry, code: HelpCountryCode};\nconst prefixes: Map<string, PrefixCountry> = new Map();\nlet maxPrefixLength = 0;\nconst setPrefix = (country: HelpCountry, code: HelpCountryCode, prefix: string = '') => {\n  prefix = code.country_code + prefix;\n  /* if(prefixes.has(prefix)) {\n    console.error('asdasdasd', prefixes.get(prefix), country, code);\n  } */\n  maxPrefixLength = Math.max(maxPrefixLength, prefix.length);\n  prefixes.set(prefix, {country, code});\n};\n\nexport function formatPhoneNumber(originalStr: string): {\n  formatted: string,\n  country: HelpCountry,\n  code: HelpCountryCode,\n  leftPattern: string\n} {\n  if(!prefixes.size) {\n    I18n.countriesList.forEach(country => {\n      country.country_codes.forEach(code => {\n        const s = {country, code};\n\n        if(code.prefixes) {\n          code.prefixes.forEach(prefix => {\n            setPrefix(country, code, prefix);\n          });\n        } else {\n          setPrefix(country, code);\n        }\n      });\n    });\n  }\n\n  // return {formatted: originalStr, country: undefined as any, leftPattern: ''};\n  let str = originalStr.replace(/\\D/g, '');\n  let phoneCode = str.slice(0, maxPrefixLength);\n  \n  ////console.log('str', str, phoneCode);\n  // if(!sortedCountries) {\n  //   sortedCountries = I18n.countriesList.slice().sort((a, b) => b.country_codes[0].country_code.length - a.country_codes[0].country_code.length);\n  // }\n  \n  // let country = sortedCountries.find((c) => {\n  //   return c.country_codes.find((c) => phoneCode.indexOf(c.replace(/\\D/g, '')) === 0);\n  // });\n\n  let prefixCountry: PrefixCountry;\n  for(let i = phoneCode.length - 1; i >= 0; --i) { // lookup for country by prefix\n    prefixCountry = prefixes.get(phoneCode.slice(0, i + 1));\n    if(prefixCountry) {\n      break;\n    }\n  }\n\n  if(!prefixCountry) {\n    return {\n      formatted: str, \n      country: undefined, \n      code: undefined, \n      leftPattern: ''\n    };\n  }\n\n  // country = /* PhoneCodesMain[country.phoneCode] ||  */country;\n  const country = prefixCountry.country;\n  \n  const patterns = prefixCountry.code.patterns || [];\n  const searchForPattern = str.slice(prefixCountry.code.country_code.length); // splice country code\n  let pattern = '', mostMatchedPatternMatches = 0, mostMatchedPattern = '';\n  for(let i = patterns.length - 1; i >= 0; --i) {\n    pattern = patterns[i];\n\n    const _pattern = pattern.replace(/ /g, '');\n    let patternMatches = 0;\n    for(let k = 0, length = Math.min(searchForPattern.length, _pattern.length); k < length; ++k) {\n      if(searchForPattern[k] === _pattern[k] || _pattern[k] === 'X') {\n        ++patternMatches;\n      } else {\n        patternMatches = 0;\n        break;\n      }\n    }\n\n    if(patternMatches > mostMatchedPatternMatches) {\n      mostMatchedPatternMatches = patternMatches;\n      mostMatchedPattern = pattern;\n    }\n  }\n\n  pattern = mostMatchedPattern || pattern;\n  pattern = pattern.replace(/\\d/g, 'X');\n\n  pattern = prefixCountry.code.country_code + ' ' + pattern;\n  // let pattern = country.pattern || country.phoneCode;\n  pattern.split('').forEach((symbol, idx) => {\n    if(symbol === ' ' && str[idx] !== ' ' && str.length > idx) {\n      str = str.slice(0, idx) + ' ' + str.slice(idx);\n    }\n  });\n  \n  /* if(country.pattern) {\n    str = str.slice(0, country.pattern.length);\n  } */\n\n  let leftPattern = pattern && pattern.length > str.length ? pattern.slice(str.length) : '';\n  if(leftPattern) {\n    /* const length = str.length;\n    leftPattern = leftPattern.split('').map((_, idx) => (length + idx).toString().slice(-1)).join(''); */\n    leftPattern = leftPattern.replace(/X/g, '‒');\n    // leftPattern = leftPattern.replace(/X/g, '0');\n  }\n  \n  return {formatted: str, country, code: prefixCountry.code, leftPattern};\n}\n","/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n * \r\n * Originally from:\r\n * https://github.com/zhukov/webogram\r\n * Copyright (C) 2014 Igor Zhukov <igor.beatle@gmail.com>\r\n * https://github.com/zhukov/webogram/blob/master/LICENSE\r\n */\r\n\r\nimport { isTouchSupported } from \"../touchSupport\";\r\n\r\nexport default function placeCaretAtEnd(el: HTMLElement, ignoreTouchCheck = false) {\r\n  if(isTouchSupported && (!ignoreTouchCheck || document.activeElement !== el)) {\r\n    return;\r\n  }\r\n  \r\n  el.focus();\r\n  if(typeof window.getSelection !== \"undefined\" && typeof document.createRange !== \"undefined\") {\r\n    var range = document.createRange();\r\n    range.selectNodeContents(el);\r\n    range.collapse(false);\r\n    var sel = window.getSelection();\r\n    sel.removeAllRanges();\r\n    sel.addRange(range);\r\n    // @ts-ignore\r\n  } else if(typeof document.body.createTextRange !== \"undefined\") {\r\n    // @ts-ignore\r\n    var textRange = document.body.createTextRange();\r\n    textRange.moveToElementText(el);\r\n    textRange.collapse(false);\r\n    textRange.select();\r\n  }\r\n}\r\n"],"sourceRoot":""}